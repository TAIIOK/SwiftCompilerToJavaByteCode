Useless nonterminals

   stmt_import


Terminals which are not used

   IMPORT
   DO
   SELF
   ERROR


Useless rules

   86 stmt_import: IMPORT ID ENDL


State 34 conflicts: 1 shift/reduce
State 40 conflicts: 1 shift/reduce
State 85 conflicts: 1 shift/reduce
State 120 conflicts: 2 shift/reduce


Grammar

    0 $accept: root $end

    1 end_expr: ENDL
    2         | ';'

    3 root: stmt_list

    4 stmt_block: '{' stmt_list '}' end_expr
    5           | stmt_list end_expr

    6 stmt_list: /* empty */
    7          | stmt_list stmt end_expr

    8 stmt: stmt_if
    9     | stmt_while
   10     | stmt_for
   11     | stmt_repeat
   12     | stmt_switch
   13     | BREAK end_expr
   14     | RETURN end_expr
   15     | RETURN expr end_expr
   16     | expr end_expr
   17     | var '=' expr end_expr
   18     | func_decl_named
   19     | var_list '=' args

   20 stmt_if: IF expr stmt_list elseif_list
   21        | IF expr stmt_list elseif_list ELSE stmt_list

   22 elseif_list: /* empty */
   23            | elseif_list ELSEIF expr stmt_list

   24 stmt_switch_block: CASE alone_id ':' stmt_block BREAK
   25                  | DEFAULT ':' stmt_block BREAK
   26                  | stmt_switch_block ENDL CASE alone_id ':' stmt_block BREAK

   27 stmt_switch: SWITCH alone_id stmt_switch_block

   28 stmt_while: WHILE expr stmt_block

   29 stmt_for: FOR alone_id IN expr stmt_block

   30 stmt_repeat: REPEAT stmt_list WHILE expr end_expr

   31 alone_id: ID

   32 id_chain: alone_id
   33         | id_chain '.' alone_id

   34 varlet: VAR
   35       | LET

   36 var: id_chain
   37    | varlet id_chain
   38    | var '[' expr ']'
   39    | var ':' type

   40 var_list: var
   41         | var_list ',' var

   42 expr: var
   43     | INT
   44     | DOUBLE
   45     | STRING
   46     | TRUE
   47     | FALSE
   48     | BOOL
   49     | FLOAT
   50     | NIL
   51     | NOT expr
   52     | expr AND expr
   53     | expr OR expr
   54     | expr '+' expr
   55     | expr '-' expr
   56     | expr '*' expr
   57     | expr '/' expr
   58     | expr '%' expr
   59     | expr '>' expr
   60     | expr '<' expr
   61     | expr GE expr
   62     | expr LE expr
   63     | expr EQ expr
   64     | expr NE expr
   65     | expr RANGE expr
   66     | '(' expr ')'
   67     | func_call

   68 func_call: var '(' arg_list ')'
   69          | var ':' alone_id '(' arg_list ')'

   70 arg_list: /* empty */
   71         | args

   72 args: ID ':' expr
   73     | args ',' ID ':' expr

   74 type: INTT
   75     | STRINGT
   76     | FLOATT
   77     | DOUBLET
   78     | BOOLT
   79     | CHARACTERT

   80 func_decl_named: FUNCTION id_chain func_body

   81 func_body: '(' arg_list_decl ')' FUNCTIONARROW stmt_list

   82 arg_list_decl: /* empty */
   83              | args_decl

   84 args_decl: alone_id ':' type
   85          | args_decl ',' alone_id ':' type


Terminals, with rules where they appear

$end (0) 0
'%' (37) 58
'(' (40) 66 68 69 81
')' (41) 66 68 69 81
'*' (42) 56
'+' (43) 54
',' (44) 41 73 85
'-' (45) 55
'.' (46) 33
'/' (47) 57
':' (58) 24 25 26 39 69 72 73 84 85
';' (59) 2
'<' (60) 60
'=' (61) 17 19
'>' (62) 59
'[' (91) 38
']' (93) 38
'{' (123) 4
'}' (125) 4
error (256)
IMPORT (258)
INT (259) 43
FLOAT (260) 49
DOUBLE (261) 44
BOOL (262) 48
STRING (263) 45
STRINGT (264) 75
CHARACTERT (265) 79
INTT (266) 74
FLOATT (267) 76
DOUBLET (268) 77
BOOLT (269) 78
TRUE (270) 46
FALSE (271) 47
LET (272) 35
VAR (273) 34
REPEAT (274) 30
WHILE (275) 28 30
FOR (276) 29
IN (277) 29
IF (278) 20 21
ELSE (279) 21
ELSEIF (280) 23
SWITCH (281) 27
CASE (282) 24 26
DEFAULT (283) 25
BREAK (284) 13 24 25 26
FUNCTION (285) 80
FUNCTIONARROW (286) 81
DO (287)
RANGE (288) 65
RETURN (289) 14 15
NIL (290) 50
SELF (291)
ERROR (292)
ID (293) 31 72 73
EQ (294) 63
NE (295) 64
LE (296) 62
GE (297) 61
NOT (298) 51
ENDL (299) 1 26
OR (300) 53
AND (301) 52


Nonterminals, with rules where they appear

$accept (65)
    on left: 0
end_expr (66)
    on left: 1 2, on right: 4 5 7 13 14 15 16 17 30
root (67)
    on left: 3, on right: 0
stmt_block (68)
    on left: 4 5, on right: 24 25 26 28 29
stmt_list (69)
    on left: 6 7, on right: 3 4 5 7 20 21 23 30 81
stmt (70)
    on left: 8 9 10 11 12 13 14 15 16 17 18 19, on right: 7
stmt_if (71)
    on left: 20 21, on right: 8
elseif_list (72)
    on left: 22 23, on right: 20 21 23
stmt_switch_block (73)
    on left: 24 25 26, on right: 26 27
stmt_switch (74)
    on left: 27, on right: 12
stmt_while (75)
    on left: 28, on right: 9
stmt_for (76)
    on left: 29, on right: 10
stmt_repeat (77)
    on left: 30, on right: 11
alone_id (78)
    on left: 31, on right: 24 26 27 29 32 33 69 84 85
id_chain (79)
    on left: 32 33, on right: 33 36 37 80
varlet (80)
    on left: 34 35, on right: 37
var (81)
    on left: 36 37 38 39, on right: 17 38 39 40 41 42 68 69
var_list (82)
    on left: 40 41, on right: 19 41
expr (83)
    on left: 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59
    60 61 62 63 64 65 66 67, on right: 15 16 17 20 21 23 28 29 30 38
    51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 72 73
func_call (84)
    on left: 68 69, on right: 67
arg_list (85)
    on left: 70 71, on right: 68 69
args (86)
    on left: 72 73, on right: 19 71 73
type (87)
    on left: 74 75 76 77 78 79, on right: 39 84 85
func_decl_named (88)
    on left: 80, on right: 18
func_body (89)
    on left: 81, on right: 80
arg_list_decl (90)
    on left: 82 83, on right: 81
args_decl (91)
    on left: 84 85, on right: 83 85


state 0

    0 $accept: . root $end

    $default  reduce using rule 6 (stmt_list)

    root       go to state 1
    stmt_list  go to state 2


state 1

    0 $accept: root . $end

    $end  shift, and go to state 3


state 2

    3 root: stmt_list .
    7 stmt_list: stmt_list . stmt end_expr

    INT       shift, and go to state 4
    FLOAT     shift, and go to state 5
    DOUBLE    shift, and go to state 6
    BOOL      shift, and go to state 7
    STRING    shift, and go to state 8
    TRUE      shift, and go to state 9
    FALSE     shift, and go to state 10
    LET       shift, and go to state 11
    VAR       shift, and go to state 12
    REPEAT    shift, and go to state 13
    WHILE     shift, and go to state 14
    FOR       shift, and go to state 15
    IF        shift, and go to state 16
    SWITCH    shift, and go to state 17
    BREAK     shift, and go to state 18
    FUNCTION  shift, and go to state 19
    RETURN    shift, and go to state 20
    NIL       shift, and go to state 21
    ID        shift, and go to state 22
    NOT       shift, and go to state 23
    '('       shift, and go to state 24

    $default  reduce using rule 3 (root)

    stmt             go to state 25
    stmt_if          go to state 26
    stmt_switch      go to state 27
    stmt_while       go to state 28
    stmt_for         go to state 29
    stmt_repeat      go to state 30
    alone_id         go to state 31
    id_chain         go to state 32
    varlet           go to state 33
    var              go to state 34
    var_list         go to state 35
    expr             go to state 36
    func_call        go to state 37
    func_decl_named  go to state 38


state 3

    0 $accept: root $end .

    $default  accept


state 4

   43 expr: INT .

    $default  reduce using rule 43 (expr)


state 5

   49 expr: FLOAT .

    $default  reduce using rule 49 (expr)


state 6

   44 expr: DOUBLE .

    $default  reduce using rule 44 (expr)


state 7

   48 expr: BOOL .

    $default  reduce using rule 48 (expr)


state 8

   45 expr: STRING .

    $default  reduce using rule 45 (expr)


state 9

   46 expr: TRUE .

    $default  reduce using rule 46 (expr)


state 10

   47 expr: FALSE .

    $default  reduce using rule 47 (expr)


state 11

   35 varlet: LET .

    $default  reduce using rule 35 (varlet)


state 12

   34 varlet: VAR .

    $default  reduce using rule 34 (varlet)


state 13

   30 stmt_repeat: REPEAT . stmt_list WHILE expr end_expr

    $default  reduce using rule 6 (stmt_list)

    stmt_list  go to state 39


state 14

   28 stmt_while: WHILE . expr stmt_block

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    DOUBLE  shift, and go to state 6
    BOOL    shift, and go to state 7
    STRING  shift, and go to state 8
    TRUE    shift, and go to state 9
    FALSE   shift, and go to state 10
    LET     shift, and go to state 11
    VAR     shift, and go to state 12
    NIL     shift, and go to state 21
    ID      shift, and go to state 22
    NOT     shift, and go to state 23
    '('     shift, and go to state 24

    alone_id   go to state 31
    id_chain   go to state 32
    varlet     go to state 33
    var        go to state 40
    expr       go to state 41
    func_call  go to state 37


state 15

   29 stmt_for: FOR . alone_id IN expr stmt_block

    ID  shift, and go to state 22

    alone_id  go to state 42


state 16

   20 stmt_if: IF . expr stmt_list elseif_list
   21        | IF . expr stmt_list elseif_list ELSE stmt_list

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    DOUBLE  shift, and go to state 6
    BOOL    shift, and go to state 7
    STRING  shift, and go to state 8
    TRUE    shift, and go to state 9
    FALSE   shift, and go to state 10
    LET     shift, and go to state 11
    VAR     shift, and go to state 12
    NIL     shift, and go to state 21
    ID      shift, and go to state 22
    NOT     shift, and go to state 23
    '('     shift, and go to state 24

    alone_id   go to state 31
    id_chain   go to state 32
    varlet     go to state 33
    var        go to state 40
    expr       go to state 43
    func_call  go to state 37


state 17

   27 stmt_switch: SWITCH . alone_id stmt_switch_block

    ID  shift, and go to state 22

    alone_id  go to state 44


state 18

   13 stmt: BREAK . end_expr

    ENDL  shift, and go to state 45
    ';'   shift, and go to state 46

    end_expr  go to state 47


state 19

   80 func_decl_named: FUNCTION . id_chain func_body

    ID  shift, and go to state 22

    alone_id  go to state 31
    id_chain  go to state 48


state 20

   14 stmt: RETURN . end_expr
   15     | RETURN . expr end_expr

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    DOUBLE  shift, and go to state 6
    BOOL    shift, and go to state 7
    STRING  shift, and go to state 8
    TRUE    shift, and go to state 9
    FALSE   shift, and go to state 10
    LET     shift, and go to state 11
    VAR     shift, and go to state 12
    NIL     shift, and go to state 21
    ID      shift, and go to state 22
    NOT     shift, and go to state 23
    ENDL    shift, and go to state 45
    ';'     shift, and go to state 46
    '('     shift, and go to state 24

    end_expr   go to state 49
    alone_id   go to state 31
    id_chain   go to state 32
    varlet     go to state 33
    var        go to state 40
    expr       go to state 50
    func_call  go to state 37


state 21

   50 expr: NIL .

    $default  reduce using rule 50 (expr)


state 22

   31 alone_id: ID .

    $default  reduce using rule 31 (alone_id)


state 23

   51 expr: NOT . expr

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    DOUBLE  shift, and go to state 6
    BOOL    shift, and go to state 7
    STRING  shift, and go to state 8
    TRUE    shift, and go to state 9
    FALSE   shift, and go to state 10
    LET     shift, and go to state 11
    VAR     shift, and go to state 12
    NIL     shift, and go to state 21
    ID      shift, and go to state 22
    NOT     shift, and go to state 23
    '('     shift, and go to state 24

    alone_id   go to state 31
    id_chain   go to state 32
    varlet     go to state 33
    var        go to state 40
    expr       go to state 51
    func_call  go to state 37


state 24

   66 expr: '(' . expr ')'

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    DOUBLE  shift, and go to state 6
    BOOL    shift, and go to state 7
    STRING  shift, and go to state 8
    TRUE    shift, and go to state 9
    FALSE   shift, and go to state 10
    LET     shift, and go to state 11
    VAR     shift, and go to state 12
    NIL     shift, and go to state 21
    ID      shift, and go to state 22
    NOT     shift, and go to state 23
    '('     shift, and go to state 24

    alone_id   go to state 31
    id_chain   go to state 32
    varlet     go to state 33
    var        go to state 40
    expr       go to state 52
    func_call  go to state 37


state 25

    7 stmt_list: stmt_list stmt . end_expr

    ENDL  shift, and go to state 45
    ';'   shift, and go to state 46

    end_expr  go to state 53


state 26

    8 stmt: stmt_if .

    $default  reduce using rule 8 (stmt)


state 27

   12 stmt: stmt_switch .

    $default  reduce using rule 12 (stmt)


state 28

    9 stmt: stmt_while .

    $default  reduce using rule 9 (stmt)


state 29

   10 stmt: stmt_for .

    $default  reduce using rule 10 (stmt)


state 30

   11 stmt: stmt_repeat .

    $default  reduce using rule 11 (stmt)


state 31

   32 id_chain: alone_id .

    $default  reduce using rule 32 (id_chain)


state 32

   33 id_chain: id_chain . '.' alone_id
   36 var: id_chain .

    '.'  shift, and go to state 54

    $default  reduce using rule 36 (var)


state 33

   37 var: varlet . id_chain

    ID  shift, and go to state 22

    alone_id  go to state 31
    id_chain  go to state 55


state 34

   17 stmt: var . '=' expr end_expr
   38 var: var . '[' expr ']'
   39    | var . ':' type
   40 var_list: var .
   42 expr: var .
   68 func_call: var . '(' arg_list ')'
   69          | var . ':' alone_id '(' arg_list ')'

    '='  shift, and go to state 56
    ':'  shift, and go to state 57
    '['  shift, and go to state 58
    '('  shift, and go to state 59

    '='       [reduce using rule 40 (var_list)]
    ','       reduce using rule 40 (var_list)
    $default  reduce using rule 42 (expr)


state 35

   19 stmt: var_list . '=' args
   41 var_list: var_list . ',' var

    '='  shift, and go to state 60
    ','  shift, and go to state 61


state 36

   16 stmt: expr . end_expr
   52 expr: expr . AND expr
   53     | expr . OR expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . EQ expr
   64     | expr . NE expr
   65     | expr . RANGE expr

    RANGE  shift, and go to state 62
    EQ     shift, and go to state 63
    NE     shift, and go to state 64
    LE     shift, and go to state 65
    GE     shift, and go to state 66
    ENDL   shift, and go to state 45
    OR     shift, and go to state 67
    AND    shift, and go to state 68
    '<'    shift, and go to state 69
    '>'    shift, and go to state 70
    '+'    shift, and go to state 71
    '-'    shift, and go to state 72
    '*'    shift, and go to state 73
    '/'    shift, and go to state 74
    '%'    shift, and go to state 75
    ';'    shift, and go to state 46

    end_expr  go to state 76


state 37

   67 expr: func_call .

    $default  reduce using rule 67 (expr)


state 38

   18 stmt: func_decl_named .

    $default  reduce using rule 18 (stmt)


state 39

    7 stmt_list: stmt_list . stmt end_expr
   30 stmt_repeat: REPEAT stmt_list . WHILE expr end_expr

    INT       shift, and go to state 4
    FLOAT     shift, and go to state 5
    DOUBLE    shift, and go to state 6
    BOOL      shift, and go to state 7
    STRING    shift, and go to state 8
    TRUE      shift, and go to state 9
    FALSE     shift, and go to state 10
    LET       shift, and go to state 11
    VAR       shift, and go to state 12
    REPEAT    shift, and go to state 13
    WHILE     shift, and go to state 77
    FOR       shift, and go to state 15
    IF        shift, and go to state 16
    SWITCH    shift, and go to state 17
    BREAK     shift, and go to state 18
    FUNCTION  shift, and go to state 19
    RETURN    shift, and go to state 20
    NIL       shift, and go to state 21
    ID        shift, and go to state 22
    NOT       shift, and go to state 23
    '('       shift, and go to state 24

    stmt             go to state 25
    stmt_if          go to state 26
    stmt_switch      go to state 27
    stmt_while       go to state 28
    stmt_for         go to state 29
    stmt_repeat      go to state 30
    alone_id         go to state 31
    id_chain         go to state 32
    varlet           go to state 33
    var              go to state 34
    var_list         go to state 35
    expr             go to state 36
    func_call        go to state 37
    func_decl_named  go to state 38


state 40

   38 var: var . '[' expr ']'
   39    | var . ':' type
   42 expr: var .
   68 func_call: var . '(' arg_list ')'
   69          | var . ':' alone_id '(' arg_list ')'

    ':'  shift, and go to state 57
    '['  shift, and go to state 58
    '('  shift, and go to state 59

    '('       [reduce using rule 42 (expr)]
    $default  reduce using rule 42 (expr)


state 41

   28 stmt_while: WHILE expr . stmt_block
   52 expr: expr . AND expr
   53     | expr . OR expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . EQ expr
   64     | expr . NE expr
   65     | expr . RANGE expr

    RANGE  shift, and go to state 62
    EQ     shift, and go to state 63
    NE     shift, and go to state 64
    LE     shift, and go to state 65
    GE     shift, and go to state 66
    OR     shift, and go to state 67
    AND    shift, and go to state 68
    '<'    shift, and go to state 69
    '>'    shift, and go to state 70
    '+'    shift, and go to state 71
    '-'    shift, and go to state 72
    '*'    shift, and go to state 73
    '/'    shift, and go to state 74
    '%'    shift, and go to state 75
    '{'    shift, and go to state 78

    $default  reduce using rule 6 (stmt_list)

    stmt_block  go to state 79
    stmt_list   go to state 80


state 42

   29 stmt_for: FOR alone_id . IN expr stmt_block

    IN  shift, and go to state 81


state 43

   20 stmt_if: IF expr . stmt_list elseif_list
   21        | IF expr . stmt_list elseif_list ELSE stmt_list
   52 expr: expr . AND expr
   53     | expr . OR expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . EQ expr
   64     | expr . NE expr
   65     | expr . RANGE expr

    RANGE  shift, and go to state 62
    EQ     shift, and go to state 63
    NE     shift, and go to state 64
    LE     shift, and go to state 65
    GE     shift, and go to state 66
    OR     shift, and go to state 67
    AND    shift, and go to state 68
    '<'    shift, and go to state 69
    '>'    shift, and go to state 70
    '+'    shift, and go to state 71
    '-'    shift, and go to state 72
    '*'    shift, and go to state 73
    '/'    shift, and go to state 74
    '%'    shift, and go to state 75

    $default  reduce using rule 6 (stmt_list)

    stmt_list  go to state 82


state 44

   27 stmt_switch: SWITCH alone_id . stmt_switch_block

    CASE     shift, and go to state 83
    DEFAULT  shift, and go to state 84

    stmt_switch_block  go to state 85


state 45

    1 end_expr: ENDL .

    $default  reduce using rule 1 (end_expr)


state 46

    2 end_expr: ';' .

    $default  reduce using rule 2 (end_expr)


state 47

   13 stmt: BREAK end_expr .

    $default  reduce using rule 13 (stmt)


state 48

   33 id_chain: id_chain . '.' alone_id
   80 func_decl_named: FUNCTION id_chain . func_body

    '.'  shift, and go to state 54
    '('  shift, and go to state 86

    func_body  go to state 87


state 49

   14 stmt: RETURN end_expr .

    $default  reduce using rule 14 (stmt)


state 50

   15 stmt: RETURN expr . end_expr
   52 expr: expr . AND expr
   53     | expr . OR expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . EQ expr
   64     | expr . NE expr
   65     | expr . RANGE expr

    RANGE  shift, and go to state 62
    EQ     shift, and go to state 63
    NE     shift, and go to state 64
    LE     shift, and go to state 65
    GE     shift, and go to state 66
    ENDL   shift, and go to state 45
    OR     shift, and go to state 67
    AND    shift, and go to state 68
    '<'    shift, and go to state 69
    '>'    shift, and go to state 70
    '+'    shift, and go to state 71
    '-'    shift, and go to state 72
    '*'    shift, and go to state 73
    '/'    shift, and go to state 74
    '%'    shift, and go to state 75
    ';'    shift, and go to state 46

    end_expr  go to state 88


state 51

   51 expr: NOT expr .
   52     | expr . AND expr
   53     | expr . OR expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . EQ expr
   64     | expr . NE expr
   65     | expr . RANGE expr

    $default  reduce using rule 51 (expr)


state 52

   52 expr: expr . AND expr
   53     | expr . OR expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . EQ expr
   64     | expr . NE expr
   65     | expr . RANGE expr
   66     | '(' expr . ')'

    RANGE  shift, and go to state 62
    EQ     shift, and go to state 63
    NE     shift, and go to state 64
    LE     shift, and go to state 65
    GE     shift, and go to state 66
    OR     shift, and go to state 67
    AND    shift, and go to state 68
    '<'    shift, and go to state 69
    '>'    shift, and go to state 70
    '+'    shift, and go to state 71
    '-'    shift, and go to state 72
    '*'    shift, and go to state 73
    '/'    shift, and go to state 74
    '%'    shift, and go to state 75
    ')'    shift, and go to state 89


state 53

    7 stmt_list: stmt_list stmt end_expr .

    $default  reduce using rule 7 (stmt_list)


state 54

   33 id_chain: id_chain '.' . alone_id

    ID  shift, and go to state 22

    alone_id  go to state 90


state 55

   33 id_chain: id_chain . '.' alone_id
   37 var: varlet id_chain .

    '.'  shift, and go to state 54

    $default  reduce using rule 37 (var)


state 56

   17 stmt: var '=' . expr end_expr

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    DOUBLE  shift, and go to state 6
    BOOL    shift, and go to state 7
    STRING  shift, and go to state 8
    TRUE    shift, and go to state 9
    FALSE   shift, and go to state 10
    LET     shift, and go to state 11
    VAR     shift, and go to state 12
    NIL     shift, and go to state 21
    ID      shift, and go to state 22
    NOT     shift, and go to state 23
    '('     shift, and go to state 24

    alone_id   go to state 31
    id_chain   go to state 32
    varlet     go to state 33
    var        go to state 40
    expr       go to state 91
    func_call  go to state 37


state 57

   39 var: var ':' . type
   69 func_call: var ':' . alone_id '(' arg_list ')'

    STRINGT     shift, and go to state 92
    CHARACTERT  shift, and go to state 93
    INTT        shift, and go to state 94
    FLOATT      shift, and go to state 95
    DOUBLET     shift, and go to state 96
    BOOLT       shift, and go to state 97
    ID          shift, and go to state 22

    alone_id  go to state 98
    type      go to state 99


state 58

   38 var: var '[' . expr ']'

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    DOUBLE  shift, and go to state 6
    BOOL    shift, and go to state 7
    STRING  shift, and go to state 8
    TRUE    shift, and go to state 9
    FALSE   shift, and go to state 10
    LET     shift, and go to state 11
    VAR     shift, and go to state 12
    NIL     shift, and go to state 21
    ID      shift, and go to state 22
    NOT     shift, and go to state 23
    '('     shift, and go to state 24

    alone_id   go to state 31
    id_chain   go to state 32
    varlet     go to state 33
    var        go to state 40
    expr       go to state 100
    func_call  go to state 37


state 59

   68 func_call: var '(' . arg_list ')'

    ID  shift, and go to state 101

    $default  reduce using rule 70 (arg_list)

    arg_list  go to state 102
    args      go to state 103


state 60

   19 stmt: var_list '=' . args

    ID  shift, and go to state 101

    args  go to state 104


state 61

   41 var_list: var_list ',' . var

    LET  shift, and go to state 11
    VAR  shift, and go to state 12
    ID   shift, and go to state 22

    alone_id  go to state 31
    id_chain  go to state 32
    varlet    go to state 33
    var       go to state 105


state 62

   65 expr: expr RANGE . expr

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    DOUBLE  shift, and go to state 6
    BOOL    shift, and go to state 7
    STRING  shift, and go to state 8
    TRUE    shift, and go to state 9
    FALSE   shift, and go to state 10
    LET     shift, and go to state 11
    VAR     shift, and go to state 12
    NIL     shift, and go to state 21
    ID      shift, and go to state 22
    NOT     shift, and go to state 23
    '('     shift, and go to state 24

    alone_id   go to state 31
    id_chain   go to state 32
    varlet     go to state 33
    var        go to state 40
    expr       go to state 106
    func_call  go to state 37


state 63

   63 expr: expr EQ . expr

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    DOUBLE  shift, and go to state 6
    BOOL    shift, and go to state 7
    STRING  shift, and go to state 8
    TRUE    shift, and go to state 9
    FALSE   shift, and go to state 10
    LET     shift, and go to state 11
    VAR     shift, and go to state 12
    NIL     shift, and go to state 21
    ID      shift, and go to state 22
    NOT     shift, and go to state 23
    '('     shift, and go to state 24

    alone_id   go to state 31
    id_chain   go to state 32
    varlet     go to state 33
    var        go to state 40
    expr       go to state 107
    func_call  go to state 37


state 64

   64 expr: expr NE . expr

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    DOUBLE  shift, and go to state 6
    BOOL    shift, and go to state 7
    STRING  shift, and go to state 8
    TRUE    shift, and go to state 9
    FALSE   shift, and go to state 10
    LET     shift, and go to state 11
    VAR     shift, and go to state 12
    NIL     shift, and go to state 21
    ID      shift, and go to state 22
    NOT     shift, and go to state 23
    '('     shift, and go to state 24

    alone_id   go to state 31
    id_chain   go to state 32
    varlet     go to state 33
    var        go to state 40
    expr       go to state 108
    func_call  go to state 37


state 65

   62 expr: expr LE . expr

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    DOUBLE  shift, and go to state 6
    BOOL    shift, and go to state 7
    STRING  shift, and go to state 8
    TRUE    shift, and go to state 9
    FALSE   shift, and go to state 10
    LET     shift, and go to state 11
    VAR     shift, and go to state 12
    NIL     shift, and go to state 21
    ID      shift, and go to state 22
    NOT     shift, and go to state 23
    '('     shift, and go to state 24

    alone_id   go to state 31
    id_chain   go to state 32
    varlet     go to state 33
    var        go to state 40
    expr       go to state 109
    func_call  go to state 37


state 66

   61 expr: expr GE . expr

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    DOUBLE  shift, and go to state 6
    BOOL    shift, and go to state 7
    STRING  shift, and go to state 8
    TRUE    shift, and go to state 9
    FALSE   shift, and go to state 10
    LET     shift, and go to state 11
    VAR     shift, and go to state 12
    NIL     shift, and go to state 21
    ID      shift, and go to state 22
    NOT     shift, and go to state 23
    '('     shift, and go to state 24

    alone_id   go to state 31
    id_chain   go to state 32
    varlet     go to state 33
    var        go to state 40
    expr       go to state 110
    func_call  go to state 37


state 67

   53 expr: expr OR . expr

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    DOUBLE  shift, and go to state 6
    BOOL    shift, and go to state 7
    STRING  shift, and go to state 8
    TRUE    shift, and go to state 9
    FALSE   shift, and go to state 10
    LET     shift, and go to state 11
    VAR     shift, and go to state 12
    NIL     shift, and go to state 21
    ID      shift, and go to state 22
    NOT     shift, and go to state 23
    '('     shift, and go to state 24

    alone_id   go to state 31
    id_chain   go to state 32
    varlet     go to state 33
    var        go to state 40
    expr       go to state 111
    func_call  go to state 37


state 68

   52 expr: expr AND . expr

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    DOUBLE  shift, and go to state 6
    BOOL    shift, and go to state 7
    STRING  shift, and go to state 8
    TRUE    shift, and go to state 9
    FALSE   shift, and go to state 10
    LET     shift, and go to state 11
    VAR     shift, and go to state 12
    NIL     shift, and go to state 21
    ID      shift, and go to state 22
    NOT     shift, and go to state 23
    '('     shift, and go to state 24

    alone_id   go to state 31
    id_chain   go to state 32
    varlet     go to state 33
    var        go to state 40
    expr       go to state 112
    func_call  go to state 37


state 69

   60 expr: expr '<' . expr

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    DOUBLE  shift, and go to state 6
    BOOL    shift, and go to state 7
    STRING  shift, and go to state 8
    TRUE    shift, and go to state 9
    FALSE   shift, and go to state 10
    LET     shift, and go to state 11
    VAR     shift, and go to state 12
    NIL     shift, and go to state 21
    ID      shift, and go to state 22
    NOT     shift, and go to state 23
    '('     shift, and go to state 24

    alone_id   go to state 31
    id_chain   go to state 32
    varlet     go to state 33
    var        go to state 40
    expr       go to state 113
    func_call  go to state 37


state 70

   59 expr: expr '>' . expr

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    DOUBLE  shift, and go to state 6
    BOOL    shift, and go to state 7
    STRING  shift, and go to state 8
    TRUE    shift, and go to state 9
    FALSE   shift, and go to state 10
    LET     shift, and go to state 11
    VAR     shift, and go to state 12
    NIL     shift, and go to state 21
    ID      shift, and go to state 22
    NOT     shift, and go to state 23
    '('     shift, and go to state 24

    alone_id   go to state 31
    id_chain   go to state 32
    varlet     go to state 33
    var        go to state 40
    expr       go to state 114
    func_call  go to state 37


state 71

   54 expr: expr '+' . expr

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    DOUBLE  shift, and go to state 6
    BOOL    shift, and go to state 7
    STRING  shift, and go to state 8
    TRUE    shift, and go to state 9
    FALSE   shift, and go to state 10
    LET     shift, and go to state 11
    VAR     shift, and go to state 12
    NIL     shift, and go to state 21
    ID      shift, and go to state 22
    NOT     shift, and go to state 23
    '('     shift, and go to state 24

    alone_id   go to state 31
    id_chain   go to state 32
    varlet     go to state 33
    var        go to state 40
    expr       go to state 115
    func_call  go to state 37


state 72

   55 expr: expr '-' . expr

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    DOUBLE  shift, and go to state 6
    BOOL    shift, and go to state 7
    STRING  shift, and go to state 8
    TRUE    shift, and go to state 9
    FALSE   shift, and go to state 10
    LET     shift, and go to state 11
    VAR     shift, and go to state 12
    NIL     shift, and go to state 21
    ID      shift, and go to state 22
    NOT     shift, and go to state 23
    '('     shift, and go to state 24

    alone_id   go to state 31
    id_chain   go to state 32
    varlet     go to state 33
    var        go to state 40
    expr       go to state 116
    func_call  go to state 37


state 73

   56 expr: expr '*' . expr

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    DOUBLE  shift, and go to state 6
    BOOL    shift, and go to state 7
    STRING  shift, and go to state 8
    TRUE    shift, and go to state 9
    FALSE   shift, and go to state 10
    LET     shift, and go to state 11
    VAR     shift, and go to state 12
    NIL     shift, and go to state 21
    ID      shift, and go to state 22
    NOT     shift, and go to state 23
    '('     shift, and go to state 24

    alone_id   go to state 31
    id_chain   go to state 32
    varlet     go to state 33
    var        go to state 40
    expr       go to state 117
    func_call  go to state 37


state 74

   57 expr: expr '/' . expr

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    DOUBLE  shift, and go to state 6
    BOOL    shift, and go to state 7
    STRING  shift, and go to state 8
    TRUE    shift, and go to state 9
    FALSE   shift, and go to state 10
    LET     shift, and go to state 11
    VAR     shift, and go to state 12
    NIL     shift, and go to state 21
    ID      shift, and go to state 22
    NOT     shift, and go to state 23
    '('     shift, and go to state 24

    alone_id   go to state 31
    id_chain   go to state 32
    varlet     go to state 33
    var        go to state 40
    expr       go to state 118
    func_call  go to state 37


state 75

   58 expr: expr '%' . expr

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    DOUBLE  shift, and go to state 6
    BOOL    shift, and go to state 7
    STRING  shift, and go to state 8
    TRUE    shift, and go to state 9
    FALSE   shift, and go to state 10
    LET     shift, and go to state 11
    VAR     shift, and go to state 12
    NIL     shift, and go to state 21
    ID      shift, and go to state 22
    NOT     shift, and go to state 23
    '('     shift, and go to state 24

    alone_id   go to state 31
    id_chain   go to state 32
    varlet     go to state 33
    var        go to state 40
    expr       go to state 119
    func_call  go to state 37


state 76

   16 stmt: expr end_expr .

    $default  reduce using rule 16 (stmt)


state 77

   28 stmt_while: WHILE . expr stmt_block
   30 stmt_repeat: REPEAT stmt_list WHILE . expr end_expr

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    DOUBLE  shift, and go to state 6
    BOOL    shift, and go to state 7
    STRING  shift, and go to state 8
    TRUE    shift, and go to state 9
    FALSE   shift, and go to state 10
    LET     shift, and go to state 11
    VAR     shift, and go to state 12
    NIL     shift, and go to state 21
    ID      shift, and go to state 22
    NOT     shift, and go to state 23
    '('     shift, and go to state 24

    alone_id   go to state 31
    id_chain   go to state 32
    varlet     go to state 33
    var        go to state 40
    expr       go to state 120
    func_call  go to state 37


state 78

    4 stmt_block: '{' . stmt_list '}' end_expr

    $default  reduce using rule 6 (stmt_list)

    stmt_list  go to state 121


state 79

   28 stmt_while: WHILE expr stmt_block .

    $default  reduce using rule 28 (stmt_while)


state 80

    5 stmt_block: stmt_list . end_expr
    7 stmt_list: stmt_list . stmt end_expr

    INT       shift, and go to state 4
    FLOAT     shift, and go to state 5
    DOUBLE    shift, and go to state 6
    BOOL      shift, and go to state 7
    STRING    shift, and go to state 8
    TRUE      shift, and go to state 9
    FALSE     shift, and go to state 10
    LET       shift, and go to state 11
    VAR       shift, and go to state 12
    REPEAT    shift, and go to state 13
    WHILE     shift, and go to state 14
    FOR       shift, and go to state 15
    IF        shift, and go to state 16
    SWITCH    shift, and go to state 17
    BREAK     shift, and go to state 18
    FUNCTION  shift, and go to state 19
    RETURN    shift, and go to state 20
    NIL       shift, and go to state 21
    ID        shift, and go to state 22
    NOT       shift, and go to state 23
    ENDL      shift, and go to state 45
    ';'       shift, and go to state 46
    '('       shift, and go to state 24

    end_expr         go to state 122
    stmt             go to state 25
    stmt_if          go to state 26
    stmt_switch      go to state 27
    stmt_while       go to state 28
    stmt_for         go to state 29
    stmt_repeat      go to state 30
    alone_id         go to state 31
    id_chain         go to state 32
    varlet           go to state 33
    var              go to state 34
    var_list         go to state 35
    expr             go to state 36
    func_call        go to state 37
    func_decl_named  go to state 38


state 81

   29 stmt_for: FOR alone_id IN . expr stmt_block

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    DOUBLE  shift, and go to state 6
    BOOL    shift, and go to state 7
    STRING  shift, and go to state 8
    TRUE    shift, and go to state 9
    FALSE   shift, and go to state 10
    LET     shift, and go to state 11
    VAR     shift, and go to state 12
    NIL     shift, and go to state 21
    ID      shift, and go to state 22
    NOT     shift, and go to state 23
    '('     shift, and go to state 24

    alone_id   go to state 31
    id_chain   go to state 32
    varlet     go to state 33
    var        go to state 40
    expr       go to state 123
    func_call  go to state 37


state 82

    7 stmt_list: stmt_list . stmt end_expr
   20 stmt_if: IF expr stmt_list . elseif_list
   21        | IF expr stmt_list . elseif_list ELSE stmt_list

    INT       shift, and go to state 4
    FLOAT     shift, and go to state 5
    DOUBLE    shift, and go to state 6
    BOOL      shift, and go to state 7
    STRING    shift, and go to state 8
    TRUE      shift, and go to state 9
    FALSE     shift, and go to state 10
    LET       shift, and go to state 11
    VAR       shift, and go to state 12
    REPEAT    shift, and go to state 13
    WHILE     shift, and go to state 14
    FOR       shift, and go to state 15
    IF        shift, and go to state 16
    SWITCH    shift, and go to state 17
    BREAK     shift, and go to state 18
    FUNCTION  shift, and go to state 19
    RETURN    shift, and go to state 20
    NIL       shift, and go to state 21
    ID        shift, and go to state 22
    NOT       shift, and go to state 23
    '('       shift, and go to state 24

    $default  reduce using rule 22 (elseif_list)

    stmt             go to state 25
    stmt_if          go to state 26
    elseif_list      go to state 124
    stmt_switch      go to state 27
    stmt_while       go to state 28
    stmt_for         go to state 29
    stmt_repeat      go to state 30
    alone_id         go to state 31
    id_chain         go to state 32
    varlet           go to state 33
    var              go to state 34
    var_list         go to state 35
    expr             go to state 36
    func_call        go to state 37
    func_decl_named  go to state 38


state 83

   24 stmt_switch_block: CASE . alone_id ':' stmt_block BREAK

    ID  shift, and go to state 22

    alone_id  go to state 125


state 84

   25 stmt_switch_block: DEFAULT . ':' stmt_block BREAK

    ':'  shift, and go to state 126


state 85

   26 stmt_switch_block: stmt_switch_block . ENDL CASE alone_id ':' stmt_block BREAK
   27 stmt_switch: SWITCH alone_id stmt_switch_block .

    ENDL  shift, and go to state 127

    ENDL      [reduce using rule 27 (stmt_switch)]
    $default  reduce using rule 27 (stmt_switch)


state 86

   81 func_body: '(' . arg_list_decl ')' FUNCTIONARROW stmt_list

    ID  shift, and go to state 22

    $default  reduce using rule 82 (arg_list_decl)

    alone_id       go to state 128
    arg_list_decl  go to state 129
    args_decl      go to state 130


state 87

   80 func_decl_named: FUNCTION id_chain func_body .

    $default  reduce using rule 80 (func_decl_named)


state 88

   15 stmt: RETURN expr end_expr .

    $default  reduce using rule 15 (stmt)


state 89

   66 expr: '(' expr ')' .

    $default  reduce using rule 66 (expr)


state 90

   33 id_chain: id_chain '.' alone_id .

    $default  reduce using rule 33 (id_chain)


state 91

   17 stmt: var '=' expr . end_expr
   52 expr: expr . AND expr
   53     | expr . OR expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . EQ expr
   64     | expr . NE expr
   65     | expr . RANGE expr

    RANGE  shift, and go to state 62
    EQ     shift, and go to state 63
    NE     shift, and go to state 64
    LE     shift, and go to state 65
    GE     shift, and go to state 66
    ENDL   shift, and go to state 45
    OR     shift, and go to state 67
    AND    shift, and go to state 68
    '<'    shift, and go to state 69
    '>'    shift, and go to state 70
    '+'    shift, and go to state 71
    '-'    shift, and go to state 72
    '*'    shift, and go to state 73
    '/'    shift, and go to state 74
    '%'    shift, and go to state 75
    ';'    shift, and go to state 46

    end_expr  go to state 131


state 92

   75 type: STRINGT .

    $default  reduce using rule 75 (type)


state 93

   79 type: CHARACTERT .

    $default  reduce using rule 79 (type)


state 94

   74 type: INTT .

    $default  reduce using rule 74 (type)


state 95

   76 type: FLOATT .

    $default  reduce using rule 76 (type)


state 96

   77 type: DOUBLET .

    $default  reduce using rule 77 (type)


state 97

   78 type: BOOLT .

    $default  reduce using rule 78 (type)


state 98

   69 func_call: var ':' alone_id . '(' arg_list ')'

    '('  shift, and go to state 132


state 99

   39 var: var ':' type .

    $default  reduce using rule 39 (var)


state 100

   38 var: var '[' expr . ']'
   52 expr: expr . AND expr
   53     | expr . OR expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . EQ expr
   64     | expr . NE expr
   65     | expr . RANGE expr

    RANGE  shift, and go to state 62
    EQ     shift, and go to state 63
    NE     shift, and go to state 64
    LE     shift, and go to state 65
    GE     shift, and go to state 66
    OR     shift, and go to state 67
    AND    shift, and go to state 68
    '<'    shift, and go to state 69
    '>'    shift, and go to state 70
    '+'    shift, and go to state 71
    '-'    shift, and go to state 72
    '*'    shift, and go to state 73
    '/'    shift, and go to state 74
    '%'    shift, and go to state 75
    ']'    shift, and go to state 133


state 101

   72 args: ID . ':' expr

    ':'  shift, and go to state 134


state 102

   68 func_call: var '(' arg_list . ')'

    ')'  shift, and go to state 135


state 103

   71 arg_list: args .
   73 args: args . ',' ID ':' expr

    ','  shift, and go to state 136

    $default  reduce using rule 71 (arg_list)


state 104

   19 stmt: var_list '=' args .
   73 args: args . ',' ID ':' expr

    ','  shift, and go to state 136

    $default  reduce using rule 19 (stmt)


state 105

   38 var: var . '[' expr ']'
   39    | var . ':' type
   41 var_list: var_list ',' var .

    ':'  shift, and go to state 137
    '['  shift, and go to state 58

    $default  reduce using rule 41 (var_list)


state 106

   52 expr: expr . AND expr
   53     | expr . OR expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . EQ expr
   64     | expr . NE expr
   65     | expr . RANGE expr
   65     | expr RANGE expr .

    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '%'  shift, and go to state 75

    $default  reduce using rule 65 (expr)


state 107

   52 expr: expr . AND expr
   53     | expr . OR expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . EQ expr
   63     | expr EQ expr .
   64     | expr . NE expr
   65     | expr . RANGE expr

    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '%'  shift, and go to state 75

    $default  reduce using rule 63 (expr)


state 108

   52 expr: expr . AND expr
   53     | expr . OR expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . EQ expr
   64     | expr . NE expr
   64     | expr NE expr .
   65     | expr . RANGE expr

    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '%'  shift, and go to state 75

    $default  reduce using rule 64 (expr)


state 109

   52 expr: expr . AND expr
   53     | expr . OR expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   62     | expr LE expr .
   63     | expr . EQ expr
   64     | expr . NE expr
   65     | expr . RANGE expr

    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '%'  shift, and go to state 75

    $default  reduce using rule 62 (expr)


state 110

   52 expr: expr . AND expr
   53     | expr . OR expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   61     | expr GE expr .
   62     | expr . LE expr
   63     | expr . EQ expr
   64     | expr . NE expr
   65     | expr . RANGE expr

    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '%'  shift, and go to state 75

    $default  reduce using rule 61 (expr)


state 111

   52 expr: expr . AND expr
   53     | expr . OR expr
   53     | expr OR expr .
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . EQ expr
   64     | expr . NE expr
   65     | expr . RANGE expr

    RANGE  shift, and go to state 62
    EQ     shift, and go to state 63
    NE     shift, and go to state 64
    LE     shift, and go to state 65
    GE     shift, and go to state 66
    AND    shift, and go to state 68
    '<'    shift, and go to state 69
    '>'    shift, and go to state 70
    '+'    shift, and go to state 71
    '-'    shift, and go to state 72
    '*'    shift, and go to state 73
    '/'    shift, and go to state 74
    '%'    shift, and go to state 75

    $default  reduce using rule 53 (expr)


state 112

   52 expr: expr . AND expr
   52     | expr AND expr .
   53     | expr . OR expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . EQ expr
   64     | expr . NE expr
   65     | expr . RANGE expr

    RANGE  shift, and go to state 62
    EQ     shift, and go to state 63
    NE     shift, and go to state 64
    LE     shift, and go to state 65
    GE     shift, and go to state 66
    '<'    shift, and go to state 69
    '>'    shift, and go to state 70
    '+'    shift, and go to state 71
    '-'    shift, and go to state 72
    '*'    shift, and go to state 73
    '/'    shift, and go to state 74
    '%'    shift, and go to state 75

    $default  reduce using rule 52 (expr)


state 113

   52 expr: expr . AND expr
   53     | expr . OR expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   60     | expr '<' expr .
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . EQ expr
   64     | expr . NE expr
   65     | expr . RANGE expr

    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '%'  shift, and go to state 75

    $default  reduce using rule 60 (expr)


state 114

   52 expr: expr . AND expr
   53     | expr . OR expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   59     | expr '>' expr .
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . EQ expr
   64     | expr . NE expr
   65     | expr . RANGE expr

    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '%'  shift, and go to state 75

    $default  reduce using rule 59 (expr)


state 115

   52 expr: expr . AND expr
   53     | expr . OR expr
   54     | expr . '+' expr
   54     | expr '+' expr .
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . EQ expr
   64     | expr . NE expr
   65     | expr . RANGE expr

    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '%'  shift, and go to state 75

    $default  reduce using rule 54 (expr)


state 116

   52 expr: expr . AND expr
   53     | expr . OR expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   55     | expr '-' expr .
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . EQ expr
   64     | expr . NE expr
   65     | expr . RANGE expr

    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '%'  shift, and go to state 75

    $default  reduce using rule 55 (expr)


state 117

   52 expr: expr . AND expr
   53     | expr . OR expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   56     | expr '*' expr .
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . EQ expr
   64     | expr . NE expr
   65     | expr . RANGE expr

    $default  reduce using rule 56 (expr)


state 118

   52 expr: expr . AND expr
   53     | expr . OR expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   57     | expr '/' expr .
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . EQ expr
   64     | expr . NE expr
   65     | expr . RANGE expr

    $default  reduce using rule 57 (expr)


state 119

   52 expr: expr . AND expr
   53     | expr . OR expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   58     | expr '%' expr .
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . EQ expr
   64     | expr . NE expr
   65     | expr . RANGE expr

    $default  reduce using rule 58 (expr)


state 120

   28 stmt_while: WHILE expr . stmt_block
   30 stmt_repeat: REPEAT stmt_list WHILE expr . end_expr
   52 expr: expr . AND expr
   53     | expr . OR expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . EQ expr
   64     | expr . NE expr
   65     | expr . RANGE expr

    RANGE  shift, and go to state 62
    EQ     shift, and go to state 63
    NE     shift, and go to state 64
    LE     shift, and go to state 65
    GE     shift, and go to state 66
    ENDL   shift, and go to state 45
    OR     shift, and go to state 67
    AND    shift, and go to state 68
    '<'    shift, and go to state 69
    '>'    shift, and go to state 70
    '+'    shift, and go to state 71
    '-'    shift, and go to state 72
    '*'    shift, and go to state 73
    '/'    shift, and go to state 74
    '%'    shift, and go to state 75
    ';'    shift, and go to state 46
    '{'    shift, and go to state 78

    ENDL      [reduce using rule 6 (stmt_list)]
    ';'       [reduce using rule 6 (stmt_list)]
    $default  reduce using rule 6 (stmt_list)

    end_expr    go to state 138
    stmt_block  go to state 79
    stmt_list   go to state 80


state 121

    4 stmt_block: '{' stmt_list . '}' end_expr
    7 stmt_list: stmt_list . stmt end_expr

    INT       shift, and go to state 4
    FLOAT     shift, and go to state 5
    DOUBLE    shift, and go to state 6
    BOOL      shift, and go to state 7
    STRING    shift, and go to state 8
    TRUE      shift, and go to state 9
    FALSE     shift, and go to state 10
    LET       shift, and go to state 11
    VAR       shift, and go to state 12
    REPEAT    shift, and go to state 13
    WHILE     shift, and go to state 14
    FOR       shift, and go to state 15
    IF        shift, and go to state 16
    SWITCH    shift, and go to state 17
    BREAK     shift, and go to state 18
    FUNCTION  shift, and go to state 19
    RETURN    shift, and go to state 20
    NIL       shift, and go to state 21
    ID        shift, and go to state 22
    NOT       shift, and go to state 23
    '}'       shift, and go to state 139
    '('       shift, and go to state 24

    stmt             go to state 25
    stmt_if          go to state 26
    stmt_switch      go to state 27
    stmt_while       go to state 28
    stmt_for         go to state 29
    stmt_repeat      go to state 30
    alone_id         go to state 31
    id_chain         go to state 32
    varlet           go to state 33
    var              go to state 34
    var_list         go to state 35
    expr             go to state 36
    func_call        go to state 37
    func_decl_named  go to state 38


state 122

    5 stmt_block: stmt_list end_expr .

    $default  reduce using rule 5 (stmt_block)


state 123

   29 stmt_for: FOR alone_id IN expr . stmt_block
   52 expr: expr . AND expr
   53     | expr . OR expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . EQ expr
   64     | expr . NE expr
   65     | expr . RANGE expr

    RANGE  shift, and go to state 62
    EQ     shift, and go to state 63
    NE     shift, and go to state 64
    LE     shift, and go to state 65
    GE     shift, and go to state 66
    OR     shift, and go to state 67
    AND    shift, and go to state 68
    '<'    shift, and go to state 69
    '>'    shift, and go to state 70
    '+'    shift, and go to state 71
    '-'    shift, and go to state 72
    '*'    shift, and go to state 73
    '/'    shift, and go to state 74
    '%'    shift, and go to state 75
    '{'    shift, and go to state 78

    $default  reduce using rule 6 (stmt_list)

    stmt_block  go to state 140
    stmt_list   go to state 80


state 124

   20 stmt_if: IF expr stmt_list elseif_list .
   21        | IF expr stmt_list elseif_list . ELSE stmt_list
   23 elseif_list: elseif_list . ELSEIF expr stmt_list

    ELSE    shift, and go to state 141
    ELSEIF  shift, and go to state 142

    $default  reduce using rule 20 (stmt_if)


state 125

   24 stmt_switch_block: CASE alone_id . ':' stmt_block BREAK

    ':'  shift, and go to state 143


state 126

   25 stmt_switch_block: DEFAULT ':' . stmt_block BREAK

    '{'  shift, and go to state 78

    $default  reduce using rule 6 (stmt_list)

    stmt_block  go to state 144
    stmt_list   go to state 80


state 127

   26 stmt_switch_block: stmt_switch_block ENDL . CASE alone_id ':' stmt_block BREAK

    CASE  shift, and go to state 145


state 128

   84 args_decl: alone_id . ':' type

    ':'  shift, and go to state 146


state 129

   81 func_body: '(' arg_list_decl . ')' FUNCTIONARROW stmt_list

    ')'  shift, and go to state 147


state 130

   83 arg_list_decl: args_decl .
   85 args_decl: args_decl . ',' alone_id ':' type

    ','  shift, and go to state 148

    $default  reduce using rule 83 (arg_list_decl)


state 131

   17 stmt: var '=' expr end_expr .

    $default  reduce using rule 17 (stmt)


state 132

   69 func_call: var ':' alone_id '(' . arg_list ')'

    ID  shift, and go to state 101

    $default  reduce using rule 70 (arg_list)

    arg_list  go to state 149
    args      go to state 103


state 133

   38 var: var '[' expr ']' .

    $default  reduce using rule 38 (var)


state 134

   72 args: ID ':' . expr

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    DOUBLE  shift, and go to state 6
    BOOL    shift, and go to state 7
    STRING  shift, and go to state 8
    TRUE    shift, and go to state 9
    FALSE   shift, and go to state 10
    LET     shift, and go to state 11
    VAR     shift, and go to state 12
    NIL     shift, and go to state 21
    ID      shift, and go to state 22
    NOT     shift, and go to state 23
    '('     shift, and go to state 24

    alone_id   go to state 31
    id_chain   go to state 32
    varlet     go to state 33
    var        go to state 40
    expr       go to state 150
    func_call  go to state 37


state 135

   68 func_call: var '(' arg_list ')' .

    $default  reduce using rule 68 (func_call)


state 136

   73 args: args ',' . ID ':' expr

    ID  shift, and go to state 151


state 137

   39 var: var ':' . type

    STRINGT     shift, and go to state 92
    CHARACTERT  shift, and go to state 93
    INTT        shift, and go to state 94
    FLOATT      shift, and go to state 95
    DOUBLET     shift, and go to state 96
    BOOLT       shift, and go to state 97

    type  go to state 99


state 138

   30 stmt_repeat: REPEAT stmt_list WHILE expr end_expr .

    $default  reduce using rule 30 (stmt_repeat)


state 139

    4 stmt_block: '{' stmt_list '}' . end_expr

    ENDL  shift, and go to state 45
    ';'   shift, and go to state 46

    end_expr  go to state 152


state 140

   29 stmt_for: FOR alone_id IN expr stmt_block .

    $default  reduce using rule 29 (stmt_for)


state 141

   21 stmt_if: IF expr stmt_list elseif_list ELSE . stmt_list

    $default  reduce using rule 6 (stmt_list)

    stmt_list  go to state 153


state 142

   23 elseif_list: elseif_list ELSEIF . expr stmt_list

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    DOUBLE  shift, and go to state 6
    BOOL    shift, and go to state 7
    STRING  shift, and go to state 8
    TRUE    shift, and go to state 9
    FALSE   shift, and go to state 10
    LET     shift, and go to state 11
    VAR     shift, and go to state 12
    NIL     shift, and go to state 21
    ID      shift, and go to state 22
    NOT     shift, and go to state 23
    '('     shift, and go to state 24

    alone_id   go to state 31
    id_chain   go to state 32
    varlet     go to state 33
    var        go to state 40
    expr       go to state 154
    func_call  go to state 37


state 143

   24 stmt_switch_block: CASE alone_id ':' . stmt_block BREAK

    '{'  shift, and go to state 78

    $default  reduce using rule 6 (stmt_list)

    stmt_block  go to state 155
    stmt_list   go to state 80


state 144

   25 stmt_switch_block: DEFAULT ':' stmt_block . BREAK

    BREAK  shift, and go to state 156


state 145

   26 stmt_switch_block: stmt_switch_block ENDL CASE . alone_id ':' stmt_block BREAK

    ID  shift, and go to state 22

    alone_id  go to state 157


state 146

   84 args_decl: alone_id ':' . type

    STRINGT     shift, and go to state 92
    CHARACTERT  shift, and go to state 93
    INTT        shift, and go to state 94
    FLOATT      shift, and go to state 95
    DOUBLET     shift, and go to state 96
    BOOLT       shift, and go to state 97

    type  go to state 158


state 147

   81 func_body: '(' arg_list_decl ')' . FUNCTIONARROW stmt_list

    FUNCTIONARROW  shift, and go to state 159


state 148

   85 args_decl: args_decl ',' . alone_id ':' type

    ID  shift, and go to state 22

    alone_id  go to state 160


state 149

   69 func_call: var ':' alone_id '(' arg_list . ')'

    ')'  shift, and go to state 161


state 150

   52 expr: expr . AND expr
   53     | expr . OR expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . EQ expr
   64     | expr . NE expr
   65     | expr . RANGE expr
   72 args: ID ':' expr .

    RANGE  shift, and go to state 62
    EQ     shift, and go to state 63
    NE     shift, and go to state 64
    LE     shift, and go to state 65
    GE     shift, and go to state 66
    OR     shift, and go to state 67
    AND    shift, and go to state 68
    '<'    shift, and go to state 69
    '>'    shift, and go to state 70
    '+'    shift, and go to state 71
    '-'    shift, and go to state 72
    '*'    shift, and go to state 73
    '/'    shift, and go to state 74
    '%'    shift, and go to state 75

    $default  reduce using rule 72 (args)


state 151

   73 args: args ',' ID . ':' expr

    ':'  shift, and go to state 162


state 152

    4 stmt_block: '{' stmt_list '}' end_expr .

    $default  reduce using rule 4 (stmt_block)


state 153

    7 stmt_list: stmt_list . stmt end_expr
   21 stmt_if: IF expr stmt_list elseif_list ELSE stmt_list .

    INT       shift, and go to state 4
    FLOAT     shift, and go to state 5
    DOUBLE    shift, and go to state 6
    BOOL      shift, and go to state 7
    STRING    shift, and go to state 8
    TRUE      shift, and go to state 9
    FALSE     shift, and go to state 10
    LET       shift, and go to state 11
    VAR       shift, and go to state 12
    REPEAT    shift, and go to state 13
    WHILE     shift, and go to state 14
    FOR       shift, and go to state 15
    IF        shift, and go to state 16
    SWITCH    shift, and go to state 17
    BREAK     shift, and go to state 18
    FUNCTION  shift, and go to state 19
    RETURN    shift, and go to state 20
    NIL       shift, and go to state 21
    ID        shift, and go to state 22
    NOT       shift, and go to state 23
    '('       shift, and go to state 24

    $default  reduce using rule 21 (stmt_if)

    stmt             go to state 25
    stmt_if          go to state 26
    stmt_switch      go to state 27
    stmt_while       go to state 28
    stmt_for         go to state 29
    stmt_repeat      go to state 30
    alone_id         go to state 31
    id_chain         go to state 32
    varlet           go to state 33
    var              go to state 34
    var_list         go to state 35
    expr             go to state 36
    func_call        go to state 37
    func_decl_named  go to state 38


state 154

   23 elseif_list: elseif_list ELSEIF expr . stmt_list
   52 expr: expr . AND expr
   53     | expr . OR expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . EQ expr
   64     | expr . NE expr
   65     | expr . RANGE expr

    RANGE  shift, and go to state 62
    EQ     shift, and go to state 63
    NE     shift, and go to state 64
    LE     shift, and go to state 65
    GE     shift, and go to state 66
    OR     shift, and go to state 67
    AND    shift, and go to state 68
    '<'    shift, and go to state 69
    '>'    shift, and go to state 70
    '+'    shift, and go to state 71
    '-'    shift, and go to state 72
    '*'    shift, and go to state 73
    '/'    shift, and go to state 74
    '%'    shift, and go to state 75

    $default  reduce using rule 6 (stmt_list)

    stmt_list  go to state 163


state 155

   24 stmt_switch_block: CASE alone_id ':' stmt_block . BREAK

    BREAK  shift, and go to state 164


state 156

   25 stmt_switch_block: DEFAULT ':' stmt_block BREAK .

    $default  reduce using rule 25 (stmt_switch_block)


state 157

   26 stmt_switch_block: stmt_switch_block ENDL CASE alone_id . ':' stmt_block BREAK

    ':'  shift, and go to state 165


state 158

   84 args_decl: alone_id ':' type .

    $default  reduce using rule 84 (args_decl)


state 159

   81 func_body: '(' arg_list_decl ')' FUNCTIONARROW . stmt_list

    $default  reduce using rule 6 (stmt_list)

    stmt_list  go to state 166


state 160

   85 args_decl: args_decl ',' alone_id . ':' type

    ':'  shift, and go to state 167


state 161

   69 func_call: var ':' alone_id '(' arg_list ')' .

    $default  reduce using rule 69 (func_call)


state 162

   73 args: args ',' ID ':' . expr

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    DOUBLE  shift, and go to state 6
    BOOL    shift, and go to state 7
    STRING  shift, and go to state 8
    TRUE    shift, and go to state 9
    FALSE   shift, and go to state 10
    LET     shift, and go to state 11
    VAR     shift, and go to state 12
    NIL     shift, and go to state 21
    ID      shift, and go to state 22
    NOT     shift, and go to state 23
    '('     shift, and go to state 24

    alone_id   go to state 31
    id_chain   go to state 32
    varlet     go to state 33
    var        go to state 40
    expr       go to state 168
    func_call  go to state 37


state 163

    7 stmt_list: stmt_list . stmt end_expr
   23 elseif_list: elseif_list ELSEIF expr stmt_list .

    INT       shift, and go to state 4
    FLOAT     shift, and go to state 5
    DOUBLE    shift, and go to state 6
    BOOL      shift, and go to state 7
    STRING    shift, and go to state 8
    TRUE      shift, and go to state 9
    FALSE     shift, and go to state 10
    LET       shift, and go to state 11
    VAR       shift, and go to state 12
    REPEAT    shift, and go to state 13
    WHILE     shift, and go to state 14
    FOR       shift, and go to state 15
    IF        shift, and go to state 16
    SWITCH    shift, and go to state 17
    BREAK     shift, and go to state 18
    FUNCTION  shift, and go to state 19
    RETURN    shift, and go to state 20
    NIL       shift, and go to state 21
    ID        shift, and go to state 22
    NOT       shift, and go to state 23
    '('       shift, and go to state 24

    $default  reduce using rule 23 (elseif_list)

    stmt             go to state 25
    stmt_if          go to state 26
    stmt_switch      go to state 27
    stmt_while       go to state 28
    stmt_for         go to state 29
    stmt_repeat      go to state 30
    alone_id         go to state 31
    id_chain         go to state 32
    varlet           go to state 33
    var              go to state 34
    var_list         go to state 35
    expr             go to state 36
    func_call        go to state 37
    func_decl_named  go to state 38


state 164

   24 stmt_switch_block: CASE alone_id ':' stmt_block BREAK .

    $default  reduce using rule 24 (stmt_switch_block)


state 165

   26 stmt_switch_block: stmt_switch_block ENDL CASE alone_id ':' . stmt_block BREAK

    '{'  shift, and go to state 78

    $default  reduce using rule 6 (stmt_list)

    stmt_block  go to state 169
    stmt_list   go to state 80


state 166

    7 stmt_list: stmt_list . stmt end_expr
   81 func_body: '(' arg_list_decl ')' FUNCTIONARROW stmt_list .

    INT       shift, and go to state 4
    FLOAT     shift, and go to state 5
    DOUBLE    shift, and go to state 6
    BOOL      shift, and go to state 7
    STRING    shift, and go to state 8
    TRUE      shift, and go to state 9
    FALSE     shift, and go to state 10
    LET       shift, and go to state 11
    VAR       shift, and go to state 12
    REPEAT    shift, and go to state 13
    WHILE     shift, and go to state 14
    FOR       shift, and go to state 15
    IF        shift, and go to state 16
    SWITCH    shift, and go to state 17
    BREAK     shift, and go to state 18
    FUNCTION  shift, and go to state 19
    RETURN    shift, and go to state 20
    NIL       shift, and go to state 21
    ID        shift, and go to state 22
    NOT       shift, and go to state 23
    '('       shift, and go to state 24

    $default  reduce using rule 81 (func_body)

    stmt             go to state 25
    stmt_if          go to state 26
    stmt_switch      go to state 27
    stmt_while       go to state 28
    stmt_for         go to state 29
    stmt_repeat      go to state 30
    alone_id         go to state 31
    id_chain         go to state 32
    varlet           go to state 33
    var              go to state 34
    var_list         go to state 35
    expr             go to state 36
    func_call        go to state 37
    func_decl_named  go to state 38


state 167

   85 args_decl: args_decl ',' alone_id ':' . type

    STRINGT     shift, and go to state 92
    CHARACTERT  shift, and go to state 93
    INTT        shift, and go to state 94
    FLOATT      shift, and go to state 95
    DOUBLET     shift, and go to state 96
    BOOLT       shift, and go to state 97

    type  go to state 170


state 168

   52 expr: expr . AND expr
   53     | expr . OR expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . EQ expr
   64     | expr . NE expr
   65     | expr . RANGE expr
   73 args: args ',' ID ':' expr .

    RANGE  shift, and go to state 62
    EQ     shift, and go to state 63
    NE     shift, and go to state 64
    LE     shift, and go to state 65
    GE     shift, and go to state 66
    OR     shift, and go to state 67
    AND    shift, and go to state 68
    '<'    shift, and go to state 69
    '>'    shift, and go to state 70
    '+'    shift, and go to state 71
    '-'    shift, and go to state 72
    '*'    shift, and go to state 73
    '/'    shift, and go to state 74
    '%'    shift, and go to state 75

    $default  reduce using rule 73 (args)


state 169

   26 stmt_switch_block: stmt_switch_block ENDL CASE alone_id ':' stmt_block . BREAK

    BREAK  shift, and go to state 171


state 170

   85 args_decl: args_decl ',' alone_id ':' type .

    $default  reduce using rule 85 (args_decl)


state 171

   26 stmt_switch_block: stmt_switch_block ENDL CASE alone_id ':' stmt_block BREAK .

    $default  reduce using rule 26 (stmt_switch_block)
