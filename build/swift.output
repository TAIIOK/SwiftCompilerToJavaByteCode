Terminals unused in grammar

   DO
   SELF
   ERROR


State 37 conflicts: 1 shift/reduce
State 47 conflicts: 1 shift/reduce


Grammar

    0 $accept: root $end

    1 end_expr: ENDL
    2         | ';'

    3 root: stmt_list

    4 stmt_import: IMPORT alone_id end_expr

    5 stmt_block: '{' stmt_list '}' end_expr
    6           | stmt_list end_expr

    7 stmt_list: %empty
    8          | stmt_list stmt end_expr

    9 stmt: stmt_if
   10     | stmt_while
   11     | stmt_for
   12     | stmt_repeat
   13     | stmt_switch
   14     | BREAK end_expr
   15     | RETURN end_expr
   16     | RETURN expr end_expr
   17     | expr end_expr
   18     | var '=' expr end_expr
   19     | func_decl_named
   20     | var_list '=' args

   21 stmt_if: IF expr stmt_block elseif_list
   22        | IF expr stmt_block elseif_list ELSE stmt_list

   23 elseif_list: %empty
   24            | elseif_list ELSEIF expr stmt_block

   25 stmt_switch_block: CASE alone_id ':' stmt_block BREAK
   26                  | DEFAULT ':' stmt_block BREAK
   27                  | stmt_switch_block CASE alone_id ':' stmt_block BREAK

   28 stmt_switch: SWITCH alone_id stmt_switch_block

   29 stmt_while: WHILE expr stmt_block

   30 stmt_for: FOR alone_id IN expr stmt_block

   31 stmt_repeat: REPEAT stmt_block WHILE expr end_expr

   32 alone_id: ID

   33 id_chain: alone_id
   34         | id_chain '.' alone_id

   35 varlet: VAR
   36       | LET

   37 var: id_chain
   38    | varlet id_chain
   39    | var ':' '[' expr ']'
   40    | var ':' type

   41 var_list: var
   42         | var_list ',' var

   43 expr: var
   44     | INT
   45     | DOUBLE
   46     | STRING
   47     | TRUE
   48     | FALSE
   49     | BOOL
   50     | FLOAT
   51     | NIL
   52     | NOT expr
   53     | expr AND expr
   54     | expr OR expr
   55     | expr '+' expr
   56     | expr '-' expr
   57     | expr '*' expr
   58     | expr '/' expr
   59     | expr '%' expr
   60     | expr '>' expr
   61     | expr '<' expr
   62     | expr GE expr
   63     | expr LE expr
   64     | expr EQ expr
   65     | expr NE expr
   66     | expr RANGE expr
   67     | '(' expr ')'
   68     | func_call
   69     | array_constructor
   70     | stmt_import

   71 func_call: var '(' arg_list ')'
   72          | var ':' alone_id '(' arg_list ')'

   73 arg_list: %empty
   74         | args

   75 args: ID ':' expr
   76     | args ',' ID ':' expr

   77 type: INTT
   78     | STRINGT
   79     | FLOATT
   80     | DOUBLET
   81     | BOOLT
   82     | CHARACTERT

   83 func_decl_named: FUNCTION id_chain func_body

   84 func_body: '(' arg_list_decl ')' FUNCTIONARROW stmt_list

   85 arg_list_decl: %empty
   86              | args_decl

   87 args_decl: alone_id ':' type
   88          | args_decl ',' alone_id ':' type

   89 array_constructor: '[' array_elem_list ']'

   90 array_elem_list: %empty
   91                | array_elems

   92 array_elems: array_elem
   93            | array_elems ',' array_elem

   94 array_elem: expr


Terminals, with rules where they appear

$end (0) 0
'%' (37) 59
'(' (40) 67 71 72 84
')' (41) 67 71 72 84
'*' (42) 57
'+' (43) 55
',' (44) 42 76 88 93
'-' (45) 56
'.' (46) 34
'/' (47) 58
':' (58) 25 26 27 39 40 72 75 76 87 88
';' (59) 2
'<' (60) 61
'=' (61) 18 20
'>' (62) 60
'[' (91) 39 89
']' (93) 39 89
'{' (123) 5
'}' (125) 5
error (256)
IMPORT (258) 4
INT (259) 44
FLOAT (260) 50
DOUBLE (261) 45
BOOL (262) 49
STRING (263) 46
STRINGT (264) 78
CHARACTERT (265) 82
INTT (266) 77
FLOATT (267) 79
DOUBLET (268) 80
BOOLT (269) 81
TRUE (270) 47
FALSE (271) 48
LET (272) 36
VAR (273) 35
REPEAT (274) 31
WHILE (275) 29 31
FOR (276) 30
IN (277) 30
IF (278) 21 22
ELSE (279) 22
ELSEIF (280) 24
SWITCH (281) 28
CASE (282) 25 27
DEFAULT (283) 26
BREAK (284) 14 25 26 27
FUNCTION (285) 83
FUNCTIONARROW (286) 84
DO (287)
RANGE (288) 66
RETURN (289) 15 16
NIL (290) 51
SELF (291)
ERROR (292)
ID (293) 32 75 76
EQ (294) 64
NE (295) 65
LE (296) 63
GE (297) 62
NOT (298) 52
ENDL (299) 1
OR (300) 54
AND (301) 53


Nonterminals, with rules where they appear

$accept (65)
    on left: 0
end_expr (66)
    on left: 1 2, on right: 4 5 6 8 14 15 16 17 18 31
root (67)
    on left: 3, on right: 0
stmt_import (68)
    on left: 4, on right: 70
stmt_block (69)
    on left: 5 6, on right: 21 22 24 25 26 27 29 30 31
stmt_list (70)
    on left: 7 8, on right: 3 5 6 8 22 84
stmt (71)
    on left: 9 10 11 12 13 14 15 16 17 18 19 20, on right: 8
stmt_if (72)
    on left: 21 22, on right: 9
elseif_list (73)
    on left: 23 24, on right: 21 22 24
stmt_switch_block (74)
    on left: 25 26 27, on right: 27 28
stmt_switch (75)
    on left: 28, on right: 13
stmt_while (76)
    on left: 29, on right: 10
stmt_for (77)
    on left: 30, on right: 11
stmt_repeat (78)
    on left: 31, on right: 12
alone_id (79)
    on left: 32, on right: 4 25 27 28 30 33 34 72 87 88
id_chain (80)
    on left: 33 34, on right: 34 37 38 83
varlet (81)
    on left: 35 36, on right: 38
var (82)
    on left: 37 38 39 40, on right: 18 39 40 41 42 43 71 72
var_list (83)
    on left: 41 42, on right: 20 42
expr (84)
    on left: 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
    61 62 63 64 65 66 67 68 69 70, on right: 16 17 18 21 22 24 29 30
    31 39 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 75 76 94
func_call (85)
    on left: 71 72, on right: 68
arg_list (86)
    on left: 73 74, on right: 71 72
args (87)
    on left: 75 76, on right: 20 74 76
type (88)
    on left: 77 78 79 80 81 82, on right: 40 87 88
func_decl_named (89)
    on left: 83, on right: 19
func_body (90)
    on left: 84, on right: 83
arg_list_decl (91)
    on left: 85 86, on right: 84
args_decl (92)
    on left: 87 88, on right: 86 88
array_constructor (93)
    on left: 89, on right: 69
array_elem_list (94)
    on left: 90 91, on right: 89
array_elems (95)
    on left: 92 93, on right: 91 93
array_elem (96)
    on left: 94, on right: 92 93


State 0

    0 $accept: . root $end

    $default  reduce using rule 7 (stmt_list)

    root       go to state 1
    stmt_list  go to state 2


State 1

    0 $accept: root . $end

    $end  shift, and go to state 3


State 2

    3 root: stmt_list .
    8 stmt_list: stmt_list . stmt end_expr

    IMPORT    shift, and go to state 4
    INT       shift, and go to state 5
    FLOAT     shift, and go to state 6
    DOUBLE    shift, and go to state 7
    BOOL      shift, and go to state 8
    STRING    shift, and go to state 9
    TRUE      shift, and go to state 10
    FALSE     shift, and go to state 11
    LET       shift, and go to state 12
    VAR       shift, and go to state 13
    REPEAT    shift, and go to state 14
    WHILE     shift, and go to state 15
    FOR       shift, and go to state 16
    IF        shift, and go to state 17
    SWITCH    shift, and go to state 18
    BREAK     shift, and go to state 19
    FUNCTION  shift, and go to state 20
    RETURN    shift, and go to state 21
    NIL       shift, and go to state 22
    ID        shift, and go to state 23
    NOT       shift, and go to state 24
    '['       shift, and go to state 25
    '('       shift, and go to state 26

    $default  reduce using rule 3 (root)

    stmt_import        go to state 27
    stmt               go to state 28
    stmt_if            go to state 29
    stmt_switch        go to state 30
    stmt_while         go to state 31
    stmt_for           go to state 32
    stmt_repeat        go to state 33
    alone_id           go to state 34
    id_chain           go to state 35
    varlet             go to state 36
    var                go to state 37
    var_list           go to state 38
    expr               go to state 39
    func_call          go to state 40
    func_decl_named    go to state 41
    array_constructor  go to state 42


State 3

    0 $accept: root $end .

    $default  accept


State 4

    4 stmt_import: IMPORT . alone_id end_expr

    ID  shift, and go to state 23

    alone_id  go to state 43


State 5

   44 expr: INT .

    $default  reduce using rule 44 (expr)


State 6

   50 expr: FLOAT .

    $default  reduce using rule 50 (expr)


State 7

   45 expr: DOUBLE .

    $default  reduce using rule 45 (expr)


State 8

   49 expr: BOOL .

    $default  reduce using rule 49 (expr)


State 9

   46 expr: STRING .

    $default  reduce using rule 46 (expr)


State 10

   47 expr: TRUE .

    $default  reduce using rule 47 (expr)


State 11

   48 expr: FALSE .

    $default  reduce using rule 48 (expr)


State 12

   36 varlet: LET .

    $default  reduce using rule 36 (varlet)


State 13

   35 varlet: VAR .

    $default  reduce using rule 35 (varlet)


State 14

   31 stmt_repeat: REPEAT . stmt_block WHILE expr end_expr

    '{'  shift, and go to state 44

    $default  reduce using rule 7 (stmt_list)

    stmt_block  go to state 45
    stmt_list   go to state 46


State 15

   29 stmt_while: WHILE . expr stmt_block

    IMPORT  shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    DOUBLE  shift, and go to state 7
    BOOL    shift, and go to state 8
    STRING  shift, and go to state 9
    TRUE    shift, and go to state 10
    FALSE   shift, and go to state 11
    LET     shift, and go to state 12
    VAR     shift, and go to state 13
    NIL     shift, and go to state 22
    ID      shift, and go to state 23
    NOT     shift, and go to state 24
    '['     shift, and go to state 25
    '('     shift, and go to state 26

    stmt_import        go to state 27
    alone_id           go to state 34
    id_chain           go to state 35
    varlet             go to state 36
    var                go to state 47
    expr               go to state 48
    func_call          go to state 40
    array_constructor  go to state 42


State 16

   30 stmt_for: FOR . alone_id IN expr stmt_block

    ID  shift, and go to state 23

    alone_id  go to state 49


State 17

   21 stmt_if: IF . expr stmt_block elseif_list
   22        | IF . expr stmt_block elseif_list ELSE stmt_list

    IMPORT  shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    DOUBLE  shift, and go to state 7
    BOOL    shift, and go to state 8
    STRING  shift, and go to state 9
    TRUE    shift, and go to state 10
    FALSE   shift, and go to state 11
    LET     shift, and go to state 12
    VAR     shift, and go to state 13
    NIL     shift, and go to state 22
    ID      shift, and go to state 23
    NOT     shift, and go to state 24
    '['     shift, and go to state 25
    '('     shift, and go to state 26

    stmt_import        go to state 27
    alone_id           go to state 34
    id_chain           go to state 35
    varlet             go to state 36
    var                go to state 47
    expr               go to state 50
    func_call          go to state 40
    array_constructor  go to state 42


State 18

   28 stmt_switch: SWITCH . alone_id stmt_switch_block

    ID  shift, and go to state 23

    alone_id  go to state 51


State 19

   14 stmt: BREAK . end_expr

    ENDL  shift, and go to state 52
    ';'   shift, and go to state 53

    end_expr  go to state 54


State 20

   83 func_decl_named: FUNCTION . id_chain func_body

    ID  shift, and go to state 23

    alone_id  go to state 34
    id_chain  go to state 55


State 21

   15 stmt: RETURN . end_expr
   16     | RETURN . expr end_expr

    IMPORT  shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    DOUBLE  shift, and go to state 7
    BOOL    shift, and go to state 8
    STRING  shift, and go to state 9
    TRUE    shift, and go to state 10
    FALSE   shift, and go to state 11
    LET     shift, and go to state 12
    VAR     shift, and go to state 13
    NIL     shift, and go to state 22
    ID      shift, and go to state 23
    NOT     shift, and go to state 24
    ENDL    shift, and go to state 52
    ';'     shift, and go to state 53
    '['     shift, and go to state 25
    '('     shift, and go to state 26

    end_expr           go to state 56
    stmt_import        go to state 27
    alone_id           go to state 34
    id_chain           go to state 35
    varlet             go to state 36
    var                go to state 47
    expr               go to state 57
    func_call          go to state 40
    array_constructor  go to state 42


State 22

   51 expr: NIL .

    $default  reduce using rule 51 (expr)


State 23

   32 alone_id: ID .

    $default  reduce using rule 32 (alone_id)


State 24

   52 expr: NOT . expr

    IMPORT  shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    DOUBLE  shift, and go to state 7
    BOOL    shift, and go to state 8
    STRING  shift, and go to state 9
    TRUE    shift, and go to state 10
    FALSE   shift, and go to state 11
    LET     shift, and go to state 12
    VAR     shift, and go to state 13
    NIL     shift, and go to state 22
    ID      shift, and go to state 23
    NOT     shift, and go to state 24
    '['     shift, and go to state 25
    '('     shift, and go to state 26

    stmt_import        go to state 27
    alone_id           go to state 34
    id_chain           go to state 35
    varlet             go to state 36
    var                go to state 47
    expr               go to state 58
    func_call          go to state 40
    array_constructor  go to state 42


State 25

   89 array_constructor: '[' . array_elem_list ']'

    IMPORT  shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    DOUBLE  shift, and go to state 7
    BOOL    shift, and go to state 8
    STRING  shift, and go to state 9
    TRUE    shift, and go to state 10
    FALSE   shift, and go to state 11
    LET     shift, and go to state 12
    VAR     shift, and go to state 13
    NIL     shift, and go to state 22
    ID      shift, and go to state 23
    NOT     shift, and go to state 24
    '['     shift, and go to state 25
    '('     shift, and go to state 26

    $default  reduce using rule 90 (array_elem_list)

    stmt_import        go to state 27
    alone_id           go to state 34
    id_chain           go to state 35
    varlet             go to state 36
    var                go to state 47
    expr               go to state 59
    func_call          go to state 40
    array_constructor  go to state 42
    array_elem_list    go to state 60
    array_elems        go to state 61
    array_elem         go to state 62


State 26

   67 expr: '(' . expr ')'

    IMPORT  shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    DOUBLE  shift, and go to state 7
    BOOL    shift, and go to state 8
    STRING  shift, and go to state 9
    TRUE    shift, and go to state 10
    FALSE   shift, and go to state 11
    LET     shift, and go to state 12
    VAR     shift, and go to state 13
    NIL     shift, and go to state 22
    ID      shift, and go to state 23
    NOT     shift, and go to state 24
    '['     shift, and go to state 25
    '('     shift, and go to state 26

    stmt_import        go to state 27
    alone_id           go to state 34
    id_chain           go to state 35
    varlet             go to state 36
    var                go to state 47
    expr               go to state 63
    func_call          go to state 40
    array_constructor  go to state 42


State 27

   70 expr: stmt_import .

    $default  reduce using rule 70 (expr)


State 28

    8 stmt_list: stmt_list stmt . end_expr

    ENDL  shift, and go to state 52
    ';'   shift, and go to state 53

    end_expr  go to state 64


State 29

    9 stmt: stmt_if .

    $default  reduce using rule 9 (stmt)


State 30

   13 stmt: stmt_switch .

    $default  reduce using rule 13 (stmt)


State 31

   10 stmt: stmt_while .

    $default  reduce using rule 10 (stmt)


State 32

   11 stmt: stmt_for .

    $default  reduce using rule 11 (stmt)


State 33

   12 stmt: stmt_repeat .

    $default  reduce using rule 12 (stmt)


State 34

   33 id_chain: alone_id .

    $default  reduce using rule 33 (id_chain)


State 35

   34 id_chain: id_chain . '.' alone_id
   37 var: id_chain .

    '.'  shift, and go to state 65

    $default  reduce using rule 37 (var)


State 36

   38 var: varlet . id_chain

    ID  shift, and go to state 23

    alone_id  go to state 34
    id_chain  go to state 66


State 37

   18 stmt: var . '=' expr end_expr
   39 var: var . ':' '[' expr ']'
   40    | var . ':' type
   41 var_list: var .
   43 expr: var .
   71 func_call: var . '(' arg_list ')'
   72          | var . ':' alone_id '(' arg_list ')'

    '='  shift, and go to state 67
    ':'  shift, and go to state 68
    '('  shift, and go to state 69

    '='       [reduce using rule 41 (var_list)]
    ','       reduce using rule 41 (var_list)
    $default  reduce using rule 43 (expr)


State 38

   20 stmt: var_list . '=' args
   42 var_list: var_list . ',' var

    '='  shift, and go to state 70
    ','  shift, and go to state 71


State 39

   17 stmt: expr . end_expr
   53 expr: expr . AND expr
   54     | expr . OR expr
   55     | expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . RANGE expr

    RANGE  shift, and go to state 72
    EQ     shift, and go to state 73
    NE     shift, and go to state 74
    LE     shift, and go to state 75
    GE     shift, and go to state 76
    ENDL   shift, and go to state 52
    OR     shift, and go to state 77
    AND    shift, and go to state 78
    '<'    shift, and go to state 79
    '>'    shift, and go to state 80
    '+'    shift, and go to state 81
    '-'    shift, and go to state 82
    '*'    shift, and go to state 83
    '/'    shift, and go to state 84
    '%'    shift, and go to state 85
    ';'    shift, and go to state 53

    end_expr  go to state 86


State 40

   68 expr: func_call .

    $default  reduce using rule 68 (expr)


State 41

   19 stmt: func_decl_named .

    $default  reduce using rule 19 (stmt)


State 42

   69 expr: array_constructor .

    $default  reduce using rule 69 (expr)


State 43

    4 stmt_import: IMPORT alone_id . end_expr

    ENDL  shift, and go to state 52
    ';'   shift, and go to state 53

    end_expr  go to state 87


State 44

    5 stmt_block: '{' . stmt_list '}' end_expr

    $default  reduce using rule 7 (stmt_list)

    stmt_list  go to state 88


State 45

   31 stmt_repeat: REPEAT stmt_block . WHILE expr end_expr

    WHILE  shift, and go to state 89


State 46

    6 stmt_block: stmt_list . end_expr
    8 stmt_list: stmt_list . stmt end_expr

    IMPORT    shift, and go to state 4
    INT       shift, and go to state 5
    FLOAT     shift, and go to state 6
    DOUBLE    shift, and go to state 7
    BOOL      shift, and go to state 8
    STRING    shift, and go to state 9
    TRUE      shift, and go to state 10
    FALSE     shift, and go to state 11
    LET       shift, and go to state 12
    VAR       shift, and go to state 13
    REPEAT    shift, and go to state 14
    WHILE     shift, and go to state 15
    FOR       shift, and go to state 16
    IF        shift, and go to state 17
    SWITCH    shift, and go to state 18
    BREAK     shift, and go to state 19
    FUNCTION  shift, and go to state 20
    RETURN    shift, and go to state 21
    NIL       shift, and go to state 22
    ID        shift, and go to state 23
    NOT       shift, and go to state 24
    ENDL      shift, and go to state 52
    ';'       shift, and go to state 53
    '['       shift, and go to state 25
    '('       shift, and go to state 26

    end_expr           go to state 90
    stmt_import        go to state 27
    stmt               go to state 28
    stmt_if            go to state 29
    stmt_switch        go to state 30
    stmt_while         go to state 31
    stmt_for           go to state 32
    stmt_repeat        go to state 33
    alone_id           go to state 34
    id_chain           go to state 35
    varlet             go to state 36
    var                go to state 37
    var_list           go to state 38
    expr               go to state 39
    func_call          go to state 40
    func_decl_named    go to state 41
    array_constructor  go to state 42


State 47

   39 var: var . ':' '[' expr ']'
   40    | var . ':' type
   43 expr: var .
   71 func_call: var . '(' arg_list ')'
   72          | var . ':' alone_id '(' arg_list ')'

    ':'  shift, and go to state 68
    '('  shift, and go to state 69

    '('       [reduce using rule 43 (expr)]
    $default  reduce using rule 43 (expr)


State 48

   29 stmt_while: WHILE expr . stmt_block
   53 expr: expr . AND expr
   54     | expr . OR expr
   55     | expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . RANGE expr

    RANGE  shift, and go to state 72
    EQ     shift, and go to state 73
    NE     shift, and go to state 74
    LE     shift, and go to state 75
    GE     shift, and go to state 76
    OR     shift, and go to state 77
    AND    shift, and go to state 78
    '<'    shift, and go to state 79
    '>'    shift, and go to state 80
    '+'    shift, and go to state 81
    '-'    shift, and go to state 82
    '*'    shift, and go to state 83
    '/'    shift, and go to state 84
    '%'    shift, and go to state 85
    '{'    shift, and go to state 44

    $default  reduce using rule 7 (stmt_list)

    stmt_block  go to state 91
    stmt_list   go to state 46


State 49

   30 stmt_for: FOR alone_id . IN expr stmt_block

    IN  shift, and go to state 92


State 50

   21 stmt_if: IF expr . stmt_block elseif_list
   22        | IF expr . stmt_block elseif_list ELSE stmt_list
   53 expr: expr . AND expr
   54     | expr . OR expr
   55     | expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . RANGE expr

    RANGE  shift, and go to state 72
    EQ     shift, and go to state 73
    NE     shift, and go to state 74
    LE     shift, and go to state 75
    GE     shift, and go to state 76
    OR     shift, and go to state 77
    AND    shift, and go to state 78
    '<'    shift, and go to state 79
    '>'    shift, and go to state 80
    '+'    shift, and go to state 81
    '-'    shift, and go to state 82
    '*'    shift, and go to state 83
    '/'    shift, and go to state 84
    '%'    shift, and go to state 85
    '{'    shift, and go to state 44

    $default  reduce using rule 7 (stmt_list)

    stmt_block  go to state 93
    stmt_list   go to state 46


State 51

   28 stmt_switch: SWITCH alone_id . stmt_switch_block

    CASE     shift, and go to state 94
    DEFAULT  shift, and go to state 95

    stmt_switch_block  go to state 96


State 52

    1 end_expr: ENDL .

    $default  reduce using rule 1 (end_expr)


State 53

    2 end_expr: ';' .

    $default  reduce using rule 2 (end_expr)


State 54

   14 stmt: BREAK end_expr .

    $default  reduce using rule 14 (stmt)


State 55

   34 id_chain: id_chain . '.' alone_id
   83 func_decl_named: FUNCTION id_chain . func_body

    '.'  shift, and go to state 65
    '('  shift, and go to state 97

    func_body  go to state 98


State 56

   15 stmt: RETURN end_expr .

    $default  reduce using rule 15 (stmt)


State 57

   16 stmt: RETURN expr . end_expr
   53 expr: expr . AND expr
   54     | expr . OR expr
   55     | expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . RANGE expr

    RANGE  shift, and go to state 72
    EQ     shift, and go to state 73
    NE     shift, and go to state 74
    LE     shift, and go to state 75
    GE     shift, and go to state 76
    ENDL   shift, and go to state 52
    OR     shift, and go to state 77
    AND    shift, and go to state 78
    '<'    shift, and go to state 79
    '>'    shift, and go to state 80
    '+'    shift, and go to state 81
    '-'    shift, and go to state 82
    '*'    shift, and go to state 83
    '/'    shift, and go to state 84
    '%'    shift, and go to state 85
    ';'    shift, and go to state 53

    end_expr  go to state 99


State 58

   52 expr: NOT expr .
   53     | expr . AND expr
   54     | expr . OR expr
   55     | expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . RANGE expr

    $default  reduce using rule 52 (expr)


State 59

   53 expr: expr . AND expr
   54     | expr . OR expr
   55     | expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . RANGE expr
   94 array_elem: expr .

    RANGE  shift, and go to state 72
    EQ     shift, and go to state 73
    NE     shift, and go to state 74
    LE     shift, and go to state 75
    GE     shift, and go to state 76
    OR     shift, and go to state 77
    AND    shift, and go to state 78
    '<'    shift, and go to state 79
    '>'    shift, and go to state 80
    '+'    shift, and go to state 81
    '-'    shift, and go to state 82
    '*'    shift, and go to state 83
    '/'    shift, and go to state 84
    '%'    shift, and go to state 85

    $default  reduce using rule 94 (array_elem)


State 60

   89 array_constructor: '[' array_elem_list . ']'

    ']'  shift, and go to state 100


State 61

   91 array_elem_list: array_elems .
   93 array_elems: array_elems . ',' array_elem

    ','  shift, and go to state 101

    $default  reduce using rule 91 (array_elem_list)


State 62

   92 array_elems: array_elem .

    $default  reduce using rule 92 (array_elems)


State 63

   53 expr: expr . AND expr
   54     | expr . OR expr
   55     | expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . RANGE expr
   67     | '(' expr . ')'

    RANGE  shift, and go to state 72
    EQ     shift, and go to state 73
    NE     shift, and go to state 74
    LE     shift, and go to state 75
    GE     shift, and go to state 76
    OR     shift, and go to state 77
    AND    shift, and go to state 78
    '<'    shift, and go to state 79
    '>'    shift, and go to state 80
    '+'    shift, and go to state 81
    '-'    shift, and go to state 82
    '*'    shift, and go to state 83
    '/'    shift, and go to state 84
    '%'    shift, and go to state 85
    ')'    shift, and go to state 102


State 64

    8 stmt_list: stmt_list stmt end_expr .

    $default  reduce using rule 8 (stmt_list)


State 65

   34 id_chain: id_chain '.' . alone_id

    ID  shift, and go to state 23

    alone_id  go to state 103


State 66

   34 id_chain: id_chain . '.' alone_id
   38 var: varlet id_chain .

    '.'  shift, and go to state 65

    $default  reduce using rule 38 (var)


State 67

   18 stmt: var '=' . expr end_expr

    IMPORT  shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    DOUBLE  shift, and go to state 7
    BOOL    shift, and go to state 8
    STRING  shift, and go to state 9
    TRUE    shift, and go to state 10
    FALSE   shift, and go to state 11
    LET     shift, and go to state 12
    VAR     shift, and go to state 13
    NIL     shift, and go to state 22
    ID      shift, and go to state 23
    NOT     shift, and go to state 24
    '['     shift, and go to state 25
    '('     shift, and go to state 26

    stmt_import        go to state 27
    alone_id           go to state 34
    id_chain           go to state 35
    varlet             go to state 36
    var                go to state 47
    expr               go to state 104
    func_call          go to state 40
    array_constructor  go to state 42


State 68

   39 var: var ':' . '[' expr ']'
   40    | var ':' . type
   72 func_call: var ':' . alone_id '(' arg_list ')'

    STRINGT     shift, and go to state 105
    CHARACTERT  shift, and go to state 106
    INTT        shift, and go to state 107
    FLOATT      shift, and go to state 108
    DOUBLET     shift, and go to state 109
    BOOLT       shift, and go to state 110
    ID          shift, and go to state 23
    '['         shift, and go to state 111

    alone_id  go to state 112
    type      go to state 113


State 69

   71 func_call: var '(' . arg_list ')'

    ID  shift, and go to state 114

    $default  reduce using rule 73 (arg_list)

    arg_list  go to state 115
    args      go to state 116


State 70

   20 stmt: var_list '=' . args

    ID  shift, and go to state 114

    args  go to state 117


State 71

   42 var_list: var_list ',' . var

    LET  shift, and go to state 12
    VAR  shift, and go to state 13
    ID   shift, and go to state 23

    alone_id  go to state 34
    id_chain  go to state 35
    varlet    go to state 36
    var       go to state 118


State 72

   66 expr: expr RANGE . expr

    IMPORT  shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    DOUBLE  shift, and go to state 7
    BOOL    shift, and go to state 8
    STRING  shift, and go to state 9
    TRUE    shift, and go to state 10
    FALSE   shift, and go to state 11
    LET     shift, and go to state 12
    VAR     shift, and go to state 13
    NIL     shift, and go to state 22
    ID      shift, and go to state 23
    NOT     shift, and go to state 24
    '['     shift, and go to state 25
    '('     shift, and go to state 26

    stmt_import        go to state 27
    alone_id           go to state 34
    id_chain           go to state 35
    varlet             go to state 36
    var                go to state 47
    expr               go to state 119
    func_call          go to state 40
    array_constructor  go to state 42


State 73

   64 expr: expr EQ . expr

    IMPORT  shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    DOUBLE  shift, and go to state 7
    BOOL    shift, and go to state 8
    STRING  shift, and go to state 9
    TRUE    shift, and go to state 10
    FALSE   shift, and go to state 11
    LET     shift, and go to state 12
    VAR     shift, and go to state 13
    NIL     shift, and go to state 22
    ID      shift, and go to state 23
    NOT     shift, and go to state 24
    '['     shift, and go to state 25
    '('     shift, and go to state 26

    stmt_import        go to state 27
    alone_id           go to state 34
    id_chain           go to state 35
    varlet             go to state 36
    var                go to state 47
    expr               go to state 120
    func_call          go to state 40
    array_constructor  go to state 42


State 74

   65 expr: expr NE . expr

    IMPORT  shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    DOUBLE  shift, and go to state 7
    BOOL    shift, and go to state 8
    STRING  shift, and go to state 9
    TRUE    shift, and go to state 10
    FALSE   shift, and go to state 11
    LET     shift, and go to state 12
    VAR     shift, and go to state 13
    NIL     shift, and go to state 22
    ID      shift, and go to state 23
    NOT     shift, and go to state 24
    '['     shift, and go to state 25
    '('     shift, and go to state 26

    stmt_import        go to state 27
    alone_id           go to state 34
    id_chain           go to state 35
    varlet             go to state 36
    var                go to state 47
    expr               go to state 121
    func_call          go to state 40
    array_constructor  go to state 42


State 75

   63 expr: expr LE . expr

    IMPORT  shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    DOUBLE  shift, and go to state 7
    BOOL    shift, and go to state 8
    STRING  shift, and go to state 9
    TRUE    shift, and go to state 10
    FALSE   shift, and go to state 11
    LET     shift, and go to state 12
    VAR     shift, and go to state 13
    NIL     shift, and go to state 22
    ID      shift, and go to state 23
    NOT     shift, and go to state 24
    '['     shift, and go to state 25
    '('     shift, and go to state 26

    stmt_import        go to state 27
    alone_id           go to state 34
    id_chain           go to state 35
    varlet             go to state 36
    var                go to state 47
    expr               go to state 122
    func_call          go to state 40
    array_constructor  go to state 42


State 76

   62 expr: expr GE . expr

    IMPORT  shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    DOUBLE  shift, and go to state 7
    BOOL    shift, and go to state 8
    STRING  shift, and go to state 9
    TRUE    shift, and go to state 10
    FALSE   shift, and go to state 11
    LET     shift, and go to state 12
    VAR     shift, and go to state 13
    NIL     shift, and go to state 22
    ID      shift, and go to state 23
    NOT     shift, and go to state 24
    '['     shift, and go to state 25
    '('     shift, and go to state 26

    stmt_import        go to state 27
    alone_id           go to state 34
    id_chain           go to state 35
    varlet             go to state 36
    var                go to state 47
    expr               go to state 123
    func_call          go to state 40
    array_constructor  go to state 42


State 77

   54 expr: expr OR . expr

    IMPORT  shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    DOUBLE  shift, and go to state 7
    BOOL    shift, and go to state 8
    STRING  shift, and go to state 9
    TRUE    shift, and go to state 10
    FALSE   shift, and go to state 11
    LET     shift, and go to state 12
    VAR     shift, and go to state 13
    NIL     shift, and go to state 22
    ID      shift, and go to state 23
    NOT     shift, and go to state 24
    '['     shift, and go to state 25
    '('     shift, and go to state 26

    stmt_import        go to state 27
    alone_id           go to state 34
    id_chain           go to state 35
    varlet             go to state 36
    var                go to state 47
    expr               go to state 124
    func_call          go to state 40
    array_constructor  go to state 42


State 78

   53 expr: expr AND . expr

    IMPORT  shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    DOUBLE  shift, and go to state 7
    BOOL    shift, and go to state 8
    STRING  shift, and go to state 9
    TRUE    shift, and go to state 10
    FALSE   shift, and go to state 11
    LET     shift, and go to state 12
    VAR     shift, and go to state 13
    NIL     shift, and go to state 22
    ID      shift, and go to state 23
    NOT     shift, and go to state 24
    '['     shift, and go to state 25
    '('     shift, and go to state 26

    stmt_import        go to state 27
    alone_id           go to state 34
    id_chain           go to state 35
    varlet             go to state 36
    var                go to state 47
    expr               go to state 125
    func_call          go to state 40
    array_constructor  go to state 42


State 79

   61 expr: expr '<' . expr

    IMPORT  shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    DOUBLE  shift, and go to state 7
    BOOL    shift, and go to state 8
    STRING  shift, and go to state 9
    TRUE    shift, and go to state 10
    FALSE   shift, and go to state 11
    LET     shift, and go to state 12
    VAR     shift, and go to state 13
    NIL     shift, and go to state 22
    ID      shift, and go to state 23
    NOT     shift, and go to state 24
    '['     shift, and go to state 25
    '('     shift, and go to state 26

    stmt_import        go to state 27
    alone_id           go to state 34
    id_chain           go to state 35
    varlet             go to state 36
    var                go to state 47
    expr               go to state 126
    func_call          go to state 40
    array_constructor  go to state 42


State 80

   60 expr: expr '>' . expr

    IMPORT  shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    DOUBLE  shift, and go to state 7
    BOOL    shift, and go to state 8
    STRING  shift, and go to state 9
    TRUE    shift, and go to state 10
    FALSE   shift, and go to state 11
    LET     shift, and go to state 12
    VAR     shift, and go to state 13
    NIL     shift, and go to state 22
    ID      shift, and go to state 23
    NOT     shift, and go to state 24
    '['     shift, and go to state 25
    '('     shift, and go to state 26

    stmt_import        go to state 27
    alone_id           go to state 34
    id_chain           go to state 35
    varlet             go to state 36
    var                go to state 47
    expr               go to state 127
    func_call          go to state 40
    array_constructor  go to state 42


State 81

   55 expr: expr '+' . expr

    IMPORT  shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    DOUBLE  shift, and go to state 7
    BOOL    shift, and go to state 8
    STRING  shift, and go to state 9
    TRUE    shift, and go to state 10
    FALSE   shift, and go to state 11
    LET     shift, and go to state 12
    VAR     shift, and go to state 13
    NIL     shift, and go to state 22
    ID      shift, and go to state 23
    NOT     shift, and go to state 24
    '['     shift, and go to state 25
    '('     shift, and go to state 26

    stmt_import        go to state 27
    alone_id           go to state 34
    id_chain           go to state 35
    varlet             go to state 36
    var                go to state 47
    expr               go to state 128
    func_call          go to state 40
    array_constructor  go to state 42


State 82

   56 expr: expr '-' . expr

    IMPORT  shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    DOUBLE  shift, and go to state 7
    BOOL    shift, and go to state 8
    STRING  shift, and go to state 9
    TRUE    shift, and go to state 10
    FALSE   shift, and go to state 11
    LET     shift, and go to state 12
    VAR     shift, and go to state 13
    NIL     shift, and go to state 22
    ID      shift, and go to state 23
    NOT     shift, and go to state 24
    '['     shift, and go to state 25
    '('     shift, and go to state 26

    stmt_import        go to state 27
    alone_id           go to state 34
    id_chain           go to state 35
    varlet             go to state 36
    var                go to state 47
    expr               go to state 129
    func_call          go to state 40
    array_constructor  go to state 42


State 83

   57 expr: expr '*' . expr

    IMPORT  shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    DOUBLE  shift, and go to state 7
    BOOL    shift, and go to state 8
    STRING  shift, and go to state 9
    TRUE    shift, and go to state 10
    FALSE   shift, and go to state 11
    LET     shift, and go to state 12
    VAR     shift, and go to state 13
    NIL     shift, and go to state 22
    ID      shift, and go to state 23
    NOT     shift, and go to state 24
    '['     shift, and go to state 25
    '('     shift, and go to state 26

    stmt_import        go to state 27
    alone_id           go to state 34
    id_chain           go to state 35
    varlet             go to state 36
    var                go to state 47
    expr               go to state 130
    func_call          go to state 40
    array_constructor  go to state 42


State 84

   58 expr: expr '/' . expr

    IMPORT  shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    DOUBLE  shift, and go to state 7
    BOOL    shift, and go to state 8
    STRING  shift, and go to state 9
    TRUE    shift, and go to state 10
    FALSE   shift, and go to state 11
    LET     shift, and go to state 12
    VAR     shift, and go to state 13
    NIL     shift, and go to state 22
    ID      shift, and go to state 23
    NOT     shift, and go to state 24
    '['     shift, and go to state 25
    '('     shift, and go to state 26

    stmt_import        go to state 27
    alone_id           go to state 34
    id_chain           go to state 35
    varlet             go to state 36
    var                go to state 47
    expr               go to state 131
    func_call          go to state 40
    array_constructor  go to state 42


State 85

   59 expr: expr '%' . expr

    IMPORT  shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    DOUBLE  shift, and go to state 7
    BOOL    shift, and go to state 8
    STRING  shift, and go to state 9
    TRUE    shift, and go to state 10
    FALSE   shift, and go to state 11
    LET     shift, and go to state 12
    VAR     shift, and go to state 13
    NIL     shift, and go to state 22
    ID      shift, and go to state 23
    NOT     shift, and go to state 24
    '['     shift, and go to state 25
    '('     shift, and go to state 26

    stmt_import        go to state 27
    alone_id           go to state 34
    id_chain           go to state 35
    varlet             go to state 36
    var                go to state 47
    expr               go to state 132
    func_call          go to state 40
    array_constructor  go to state 42


State 86

   17 stmt: expr end_expr .

    $default  reduce using rule 17 (stmt)


State 87

    4 stmt_import: IMPORT alone_id end_expr .

    $default  reduce using rule 4 (stmt_import)


State 88

    5 stmt_block: '{' stmt_list . '}' end_expr
    8 stmt_list: stmt_list . stmt end_expr

    IMPORT    shift, and go to state 4
    INT       shift, and go to state 5
    FLOAT     shift, and go to state 6
    DOUBLE    shift, and go to state 7
    BOOL      shift, and go to state 8
    STRING    shift, and go to state 9
    TRUE      shift, and go to state 10
    FALSE     shift, and go to state 11
    LET       shift, and go to state 12
    VAR       shift, and go to state 13
    REPEAT    shift, and go to state 14
    WHILE     shift, and go to state 15
    FOR       shift, and go to state 16
    IF        shift, and go to state 17
    SWITCH    shift, and go to state 18
    BREAK     shift, and go to state 19
    FUNCTION  shift, and go to state 20
    RETURN    shift, and go to state 21
    NIL       shift, and go to state 22
    ID        shift, and go to state 23
    NOT       shift, and go to state 24
    '['       shift, and go to state 25
    '}'       shift, and go to state 133
    '('       shift, and go to state 26

    stmt_import        go to state 27
    stmt               go to state 28
    stmt_if            go to state 29
    stmt_switch        go to state 30
    stmt_while         go to state 31
    stmt_for           go to state 32
    stmt_repeat        go to state 33
    alone_id           go to state 34
    id_chain           go to state 35
    varlet             go to state 36
    var                go to state 37
    var_list           go to state 38
    expr               go to state 39
    func_call          go to state 40
    func_decl_named    go to state 41
    array_constructor  go to state 42


State 89

   31 stmt_repeat: REPEAT stmt_block WHILE . expr end_expr

    IMPORT  shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    DOUBLE  shift, and go to state 7
    BOOL    shift, and go to state 8
    STRING  shift, and go to state 9
    TRUE    shift, and go to state 10
    FALSE   shift, and go to state 11
    LET     shift, and go to state 12
    VAR     shift, and go to state 13
    NIL     shift, and go to state 22
    ID      shift, and go to state 23
    NOT     shift, and go to state 24
    '['     shift, and go to state 25
    '('     shift, and go to state 26

    stmt_import        go to state 27
    alone_id           go to state 34
    id_chain           go to state 35
    varlet             go to state 36
    var                go to state 47
    expr               go to state 134
    func_call          go to state 40
    array_constructor  go to state 42


State 90

    6 stmt_block: stmt_list end_expr .

    $default  reduce using rule 6 (stmt_block)


State 91

   29 stmt_while: WHILE expr stmt_block .

    $default  reduce using rule 29 (stmt_while)


State 92

   30 stmt_for: FOR alone_id IN . expr stmt_block

    IMPORT  shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    DOUBLE  shift, and go to state 7
    BOOL    shift, and go to state 8
    STRING  shift, and go to state 9
    TRUE    shift, and go to state 10
    FALSE   shift, and go to state 11
    LET     shift, and go to state 12
    VAR     shift, and go to state 13
    NIL     shift, and go to state 22
    ID      shift, and go to state 23
    NOT     shift, and go to state 24
    '['     shift, and go to state 25
    '('     shift, and go to state 26

    stmt_import        go to state 27
    alone_id           go to state 34
    id_chain           go to state 35
    varlet             go to state 36
    var                go to state 47
    expr               go to state 135
    func_call          go to state 40
    array_constructor  go to state 42


State 93

   21 stmt_if: IF expr stmt_block . elseif_list
   22        | IF expr stmt_block . elseif_list ELSE stmt_list

    $default  reduce using rule 23 (elseif_list)

    elseif_list  go to state 136


State 94

   25 stmt_switch_block: CASE . alone_id ':' stmt_block BREAK

    ID  shift, and go to state 23

    alone_id  go to state 137


State 95

   26 stmt_switch_block: DEFAULT . ':' stmt_block BREAK

    ':'  shift, and go to state 138


State 96

   27 stmt_switch_block: stmt_switch_block . CASE alone_id ':' stmt_block BREAK
   28 stmt_switch: SWITCH alone_id stmt_switch_block .

    CASE  shift, and go to state 139

    $default  reduce using rule 28 (stmt_switch)


State 97

   84 func_body: '(' . arg_list_decl ')' FUNCTIONARROW stmt_list

    ID  shift, and go to state 23

    $default  reduce using rule 85 (arg_list_decl)

    alone_id       go to state 140
    arg_list_decl  go to state 141
    args_decl      go to state 142


State 98

   83 func_decl_named: FUNCTION id_chain func_body .

    $default  reduce using rule 83 (func_decl_named)


State 99

   16 stmt: RETURN expr end_expr .

    $default  reduce using rule 16 (stmt)


State 100

   89 array_constructor: '[' array_elem_list ']' .

    $default  reduce using rule 89 (array_constructor)


State 101

   93 array_elems: array_elems ',' . array_elem

    IMPORT  shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    DOUBLE  shift, and go to state 7
    BOOL    shift, and go to state 8
    STRING  shift, and go to state 9
    TRUE    shift, and go to state 10
    FALSE   shift, and go to state 11
    LET     shift, and go to state 12
    VAR     shift, and go to state 13
    NIL     shift, and go to state 22
    ID      shift, and go to state 23
    NOT     shift, and go to state 24
    '['     shift, and go to state 25
    '('     shift, and go to state 26

    stmt_import        go to state 27
    alone_id           go to state 34
    id_chain           go to state 35
    varlet             go to state 36
    var                go to state 47
    expr               go to state 59
    func_call          go to state 40
    array_constructor  go to state 42
    array_elem         go to state 143


State 102

   67 expr: '(' expr ')' .

    $default  reduce using rule 67 (expr)


State 103

   34 id_chain: id_chain '.' alone_id .

    $default  reduce using rule 34 (id_chain)


State 104

   18 stmt: var '=' expr . end_expr
   53 expr: expr . AND expr
   54     | expr . OR expr
   55     | expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . RANGE expr

    RANGE  shift, and go to state 72
    EQ     shift, and go to state 73
    NE     shift, and go to state 74
    LE     shift, and go to state 75
    GE     shift, and go to state 76
    ENDL   shift, and go to state 52
    OR     shift, and go to state 77
    AND    shift, and go to state 78
    '<'    shift, and go to state 79
    '>'    shift, and go to state 80
    '+'    shift, and go to state 81
    '-'    shift, and go to state 82
    '*'    shift, and go to state 83
    '/'    shift, and go to state 84
    '%'    shift, and go to state 85
    ';'    shift, and go to state 53

    end_expr  go to state 144


State 105

   78 type: STRINGT .

    $default  reduce using rule 78 (type)


State 106

   82 type: CHARACTERT .

    $default  reduce using rule 82 (type)


State 107

   77 type: INTT .

    $default  reduce using rule 77 (type)


State 108

   79 type: FLOATT .

    $default  reduce using rule 79 (type)


State 109

   80 type: DOUBLET .

    $default  reduce using rule 80 (type)


State 110

   81 type: BOOLT .

    $default  reduce using rule 81 (type)


State 111

   39 var: var ':' '[' . expr ']'

    IMPORT  shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    DOUBLE  shift, and go to state 7
    BOOL    shift, and go to state 8
    STRING  shift, and go to state 9
    TRUE    shift, and go to state 10
    FALSE   shift, and go to state 11
    LET     shift, and go to state 12
    VAR     shift, and go to state 13
    NIL     shift, and go to state 22
    ID      shift, and go to state 23
    NOT     shift, and go to state 24
    '['     shift, and go to state 25
    '('     shift, and go to state 26

    stmt_import        go to state 27
    alone_id           go to state 34
    id_chain           go to state 35
    varlet             go to state 36
    var                go to state 47
    expr               go to state 145
    func_call          go to state 40
    array_constructor  go to state 42


State 112

   72 func_call: var ':' alone_id . '(' arg_list ')'

    '('  shift, and go to state 146


State 113

   40 var: var ':' type .

    $default  reduce using rule 40 (var)


State 114

   75 args: ID . ':' expr

    ':'  shift, and go to state 147


State 115

   71 func_call: var '(' arg_list . ')'

    ')'  shift, and go to state 148


State 116

   74 arg_list: args .
   76 args: args . ',' ID ':' expr

    ','  shift, and go to state 149

    $default  reduce using rule 74 (arg_list)


State 117

   20 stmt: var_list '=' args .
   76 args: args . ',' ID ':' expr

    ','  shift, and go to state 149

    $default  reduce using rule 20 (stmt)


State 118

   39 var: var . ':' '[' expr ']'
   40    | var . ':' type
   42 var_list: var_list ',' var .

    ':'  shift, and go to state 150

    $default  reduce using rule 42 (var_list)


State 119

   53 expr: expr . AND expr
   54     | expr . OR expr
   55     | expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . RANGE expr
   66     | expr RANGE expr .

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 66 (expr)


State 120

   53 expr: expr . AND expr
   54     | expr . OR expr
   55     | expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . EQ expr
   64     | expr EQ expr .
   65     | expr . NE expr
   66     | expr . RANGE expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 64 (expr)


State 121

   53 expr: expr . AND expr
   54     | expr . OR expr
   55     | expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   65     | expr NE expr .
   66     | expr . RANGE expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 65 (expr)


State 122

   53 expr: expr . AND expr
   54     | expr . OR expr
   55     | expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . GE expr
   63     | expr . LE expr
   63     | expr LE expr .
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . RANGE expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 63 (expr)


State 123

   53 expr: expr . AND expr
   54     | expr . OR expr
   55     | expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . GE expr
   62     | expr GE expr .
   63     | expr . LE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . RANGE expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 62 (expr)


State 124

   53 expr: expr . AND expr
   54     | expr . OR expr
   54     | expr OR expr .
   55     | expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . RANGE expr

    RANGE  shift, and go to state 72
    EQ     shift, and go to state 73
    NE     shift, and go to state 74
    LE     shift, and go to state 75
    GE     shift, and go to state 76
    AND    shift, and go to state 78
    '<'    shift, and go to state 79
    '>'    shift, and go to state 80
    '+'    shift, and go to state 81
    '-'    shift, and go to state 82
    '*'    shift, and go to state 83
    '/'    shift, and go to state 84
    '%'    shift, and go to state 85

    $default  reduce using rule 54 (expr)


State 125

   53 expr: expr . AND expr
   53     | expr AND expr .
   54     | expr . OR expr
   55     | expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . RANGE expr

    RANGE  shift, and go to state 72
    EQ     shift, and go to state 73
    NE     shift, and go to state 74
    LE     shift, and go to state 75
    GE     shift, and go to state 76
    '<'    shift, and go to state 79
    '>'    shift, and go to state 80
    '+'    shift, and go to state 81
    '-'    shift, and go to state 82
    '*'    shift, and go to state 83
    '/'    shift, and go to state 84
    '%'    shift, and go to state 85

    $default  reduce using rule 53 (expr)


State 126

   53 expr: expr . AND expr
   54     | expr . OR expr
   55     | expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   61     | expr '<' expr .
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . RANGE expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 61 (expr)


State 127

   53 expr: expr . AND expr
   54     | expr . OR expr
   55     | expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . '%' expr
   60     | expr . '>' expr
   60     | expr '>' expr .
   61     | expr . '<' expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . RANGE expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 60 (expr)


State 128

   53 expr: expr . AND expr
   54     | expr . OR expr
   55     | expr . '+' expr
   55     | expr '+' expr .
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . RANGE expr

    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 55 (expr)


State 129

   53 expr: expr . AND expr
   54     | expr . OR expr
   55     | expr . '+' expr
   56     | expr . '-' expr
   56     | expr '-' expr .
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . RANGE expr

    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 56 (expr)


State 130

   53 expr: expr . AND expr
   54     | expr . OR expr
   55     | expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   57     | expr '*' expr .
   58     | expr . '/' expr
   59     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . RANGE expr

    $default  reduce using rule 57 (expr)


State 131

   53 expr: expr . AND expr
   54     | expr . OR expr
   55     | expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   58     | expr '/' expr .
   59     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . RANGE expr

    $default  reduce using rule 58 (expr)


State 132

   53 expr: expr . AND expr
   54     | expr . OR expr
   55     | expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . '%' expr
   59     | expr '%' expr .
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . RANGE expr

    $default  reduce using rule 59 (expr)


State 133

    5 stmt_block: '{' stmt_list '}' . end_expr

    ENDL  shift, and go to state 52
    ';'   shift, and go to state 53

    end_expr  go to state 151


State 134

   31 stmt_repeat: REPEAT stmt_block WHILE expr . end_expr
   53 expr: expr . AND expr
   54     | expr . OR expr
   55     | expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . RANGE expr

    RANGE  shift, and go to state 72
    EQ     shift, and go to state 73
    NE     shift, and go to state 74
    LE     shift, and go to state 75
    GE     shift, and go to state 76
    ENDL   shift, and go to state 52
    OR     shift, and go to state 77
    AND    shift, and go to state 78
    '<'    shift, and go to state 79
    '>'    shift, and go to state 80
    '+'    shift, and go to state 81
    '-'    shift, and go to state 82
    '*'    shift, and go to state 83
    '/'    shift, and go to state 84
    '%'    shift, and go to state 85
    ';'    shift, and go to state 53

    end_expr  go to state 152


State 135

   30 stmt_for: FOR alone_id IN expr . stmt_block
   53 expr: expr . AND expr
   54     | expr . OR expr
   55     | expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . RANGE expr

    RANGE  shift, and go to state 72
    EQ     shift, and go to state 73
    NE     shift, and go to state 74
    LE     shift, and go to state 75
    GE     shift, and go to state 76
    OR     shift, and go to state 77
    AND    shift, and go to state 78
    '<'    shift, and go to state 79
    '>'    shift, and go to state 80
    '+'    shift, and go to state 81
    '-'    shift, and go to state 82
    '*'    shift, and go to state 83
    '/'    shift, and go to state 84
    '%'    shift, and go to state 85
    '{'    shift, and go to state 44

    $default  reduce using rule 7 (stmt_list)

    stmt_block  go to state 153
    stmt_list   go to state 46


State 136

   21 stmt_if: IF expr stmt_block elseif_list .
   22        | IF expr stmt_block elseif_list . ELSE stmt_list
   24 elseif_list: elseif_list . ELSEIF expr stmt_block

    ELSE    shift, and go to state 154
    ELSEIF  shift, and go to state 155

    $default  reduce using rule 21 (stmt_if)


State 137

   25 stmt_switch_block: CASE alone_id . ':' stmt_block BREAK

    ':'  shift, and go to state 156


State 138

   26 stmt_switch_block: DEFAULT ':' . stmt_block BREAK

    '{'  shift, and go to state 44

    $default  reduce using rule 7 (stmt_list)

    stmt_block  go to state 157
    stmt_list   go to state 46


State 139

   27 stmt_switch_block: stmt_switch_block CASE . alone_id ':' stmt_block BREAK

    ID  shift, and go to state 23

    alone_id  go to state 158


State 140

   87 args_decl: alone_id . ':' type

    ':'  shift, and go to state 159


State 141

   84 func_body: '(' arg_list_decl . ')' FUNCTIONARROW stmt_list

    ')'  shift, and go to state 160


State 142

   86 arg_list_decl: args_decl .
   88 args_decl: args_decl . ',' alone_id ':' type

    ','  shift, and go to state 161

    $default  reduce using rule 86 (arg_list_decl)


State 143

   93 array_elems: array_elems ',' array_elem .

    $default  reduce using rule 93 (array_elems)


State 144

   18 stmt: var '=' expr end_expr .

    $default  reduce using rule 18 (stmt)


State 145

   39 var: var ':' '[' expr . ']'
   53 expr: expr . AND expr
   54     | expr . OR expr
   55     | expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . RANGE expr

    RANGE  shift, and go to state 72
    EQ     shift, and go to state 73
    NE     shift, and go to state 74
    LE     shift, and go to state 75
    GE     shift, and go to state 76
    OR     shift, and go to state 77
    AND    shift, and go to state 78
    '<'    shift, and go to state 79
    '>'    shift, and go to state 80
    '+'    shift, and go to state 81
    '-'    shift, and go to state 82
    '*'    shift, and go to state 83
    '/'    shift, and go to state 84
    '%'    shift, and go to state 85
    ']'    shift, and go to state 162


State 146

   72 func_call: var ':' alone_id '(' . arg_list ')'

    ID  shift, and go to state 114

    $default  reduce using rule 73 (arg_list)

    arg_list  go to state 163
    args      go to state 116


State 147

   75 args: ID ':' . expr

    IMPORT  shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    DOUBLE  shift, and go to state 7
    BOOL    shift, and go to state 8
    STRING  shift, and go to state 9
    TRUE    shift, and go to state 10
    FALSE   shift, and go to state 11
    LET     shift, and go to state 12
    VAR     shift, and go to state 13
    NIL     shift, and go to state 22
    ID      shift, and go to state 23
    NOT     shift, and go to state 24
    '['     shift, and go to state 25
    '('     shift, and go to state 26

    stmt_import        go to state 27
    alone_id           go to state 34
    id_chain           go to state 35
    varlet             go to state 36
    var                go to state 47
    expr               go to state 164
    func_call          go to state 40
    array_constructor  go to state 42


State 148

   71 func_call: var '(' arg_list ')' .

    $default  reduce using rule 71 (func_call)


State 149

   76 args: args ',' . ID ':' expr

    ID  shift, and go to state 165


State 150

   39 var: var ':' . '[' expr ']'
   40    | var ':' . type

    STRINGT     shift, and go to state 105
    CHARACTERT  shift, and go to state 106
    INTT        shift, and go to state 107
    FLOATT      shift, and go to state 108
    DOUBLET     shift, and go to state 109
    BOOLT       shift, and go to state 110
    '['         shift, and go to state 111

    type  go to state 113


State 151

    5 stmt_block: '{' stmt_list '}' end_expr .

    $default  reduce using rule 5 (stmt_block)


State 152

   31 stmt_repeat: REPEAT stmt_block WHILE expr end_expr .

    $default  reduce using rule 31 (stmt_repeat)


State 153

   30 stmt_for: FOR alone_id IN expr stmt_block .

    $default  reduce using rule 30 (stmt_for)


State 154

   22 stmt_if: IF expr stmt_block elseif_list ELSE . stmt_list

    $default  reduce using rule 7 (stmt_list)

    stmt_list  go to state 166


State 155

   24 elseif_list: elseif_list ELSEIF . expr stmt_block

    IMPORT  shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    DOUBLE  shift, and go to state 7
    BOOL    shift, and go to state 8
    STRING  shift, and go to state 9
    TRUE    shift, and go to state 10
    FALSE   shift, and go to state 11
    LET     shift, and go to state 12
    VAR     shift, and go to state 13
    NIL     shift, and go to state 22
    ID      shift, and go to state 23
    NOT     shift, and go to state 24
    '['     shift, and go to state 25
    '('     shift, and go to state 26

    stmt_import        go to state 27
    alone_id           go to state 34
    id_chain           go to state 35
    varlet             go to state 36
    var                go to state 47
    expr               go to state 167
    func_call          go to state 40
    array_constructor  go to state 42


State 156

   25 stmt_switch_block: CASE alone_id ':' . stmt_block BREAK

    '{'  shift, and go to state 44

    $default  reduce using rule 7 (stmt_list)

    stmt_block  go to state 168
    stmt_list   go to state 46


State 157

   26 stmt_switch_block: DEFAULT ':' stmt_block . BREAK

    BREAK  shift, and go to state 169


State 158

   27 stmt_switch_block: stmt_switch_block CASE alone_id . ':' stmt_block BREAK

    ':'  shift, and go to state 170


State 159

   87 args_decl: alone_id ':' . type

    STRINGT     shift, and go to state 105
    CHARACTERT  shift, and go to state 106
    INTT        shift, and go to state 107
    FLOATT      shift, and go to state 108
    DOUBLET     shift, and go to state 109
    BOOLT       shift, and go to state 110

    type  go to state 171


State 160

   84 func_body: '(' arg_list_decl ')' . FUNCTIONARROW stmt_list

    FUNCTIONARROW  shift, and go to state 172


State 161

   88 args_decl: args_decl ',' . alone_id ':' type

    ID  shift, and go to state 23

    alone_id  go to state 173


State 162

   39 var: var ':' '[' expr ']' .

    $default  reduce using rule 39 (var)


State 163

   72 func_call: var ':' alone_id '(' arg_list . ')'

    ')'  shift, and go to state 174


State 164

   53 expr: expr . AND expr
   54     | expr . OR expr
   55     | expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . RANGE expr
   75 args: ID ':' expr .

    RANGE  shift, and go to state 72
    EQ     shift, and go to state 73
    NE     shift, and go to state 74
    LE     shift, and go to state 75
    GE     shift, and go to state 76
    OR     shift, and go to state 77
    AND    shift, and go to state 78
    '<'    shift, and go to state 79
    '>'    shift, and go to state 80
    '+'    shift, and go to state 81
    '-'    shift, and go to state 82
    '*'    shift, and go to state 83
    '/'    shift, and go to state 84
    '%'    shift, and go to state 85

    $default  reduce using rule 75 (args)


State 165

   76 args: args ',' ID . ':' expr

    ':'  shift, and go to state 175


State 166

    8 stmt_list: stmt_list . stmt end_expr
   22 stmt_if: IF expr stmt_block elseif_list ELSE stmt_list .

    IMPORT    shift, and go to state 4
    INT       shift, and go to state 5
    FLOAT     shift, and go to state 6
    DOUBLE    shift, and go to state 7
    BOOL      shift, and go to state 8
    STRING    shift, and go to state 9
    TRUE      shift, and go to state 10
    FALSE     shift, and go to state 11
    LET       shift, and go to state 12
    VAR       shift, and go to state 13
    REPEAT    shift, and go to state 14
    WHILE     shift, and go to state 15
    FOR       shift, and go to state 16
    IF        shift, and go to state 17
    SWITCH    shift, and go to state 18
    BREAK     shift, and go to state 19
    FUNCTION  shift, and go to state 20
    RETURN    shift, and go to state 21
    NIL       shift, and go to state 22
    ID        shift, and go to state 23
    NOT       shift, and go to state 24
    '['       shift, and go to state 25
    '('       shift, and go to state 26

    $default  reduce using rule 22 (stmt_if)

    stmt_import        go to state 27
    stmt               go to state 28
    stmt_if            go to state 29
    stmt_switch        go to state 30
    stmt_while         go to state 31
    stmt_for           go to state 32
    stmt_repeat        go to state 33
    alone_id           go to state 34
    id_chain           go to state 35
    varlet             go to state 36
    var                go to state 37
    var_list           go to state 38
    expr               go to state 39
    func_call          go to state 40
    func_decl_named    go to state 41
    array_constructor  go to state 42


State 167

   24 elseif_list: elseif_list ELSEIF expr . stmt_block
   53 expr: expr . AND expr
   54     | expr . OR expr
   55     | expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . RANGE expr

    RANGE  shift, and go to state 72
    EQ     shift, and go to state 73
    NE     shift, and go to state 74
    LE     shift, and go to state 75
    GE     shift, and go to state 76
    OR     shift, and go to state 77
    AND    shift, and go to state 78
    '<'    shift, and go to state 79
    '>'    shift, and go to state 80
    '+'    shift, and go to state 81
    '-'    shift, and go to state 82
    '*'    shift, and go to state 83
    '/'    shift, and go to state 84
    '%'    shift, and go to state 85
    '{'    shift, and go to state 44

    $default  reduce using rule 7 (stmt_list)

    stmt_block  go to state 176
    stmt_list   go to state 46


State 168

   25 stmt_switch_block: CASE alone_id ':' stmt_block . BREAK

    BREAK  shift, and go to state 177


State 169

   26 stmt_switch_block: DEFAULT ':' stmt_block BREAK .

    $default  reduce using rule 26 (stmt_switch_block)


State 170

   27 stmt_switch_block: stmt_switch_block CASE alone_id ':' . stmt_block BREAK

    '{'  shift, and go to state 44

    $default  reduce using rule 7 (stmt_list)

    stmt_block  go to state 178
    stmt_list   go to state 46


State 171

   87 args_decl: alone_id ':' type .

    $default  reduce using rule 87 (args_decl)


State 172

   84 func_body: '(' arg_list_decl ')' FUNCTIONARROW . stmt_list

    $default  reduce using rule 7 (stmt_list)

    stmt_list  go to state 179


State 173

   88 args_decl: args_decl ',' alone_id . ':' type

    ':'  shift, and go to state 180


State 174

   72 func_call: var ':' alone_id '(' arg_list ')' .

    $default  reduce using rule 72 (func_call)


State 175

   76 args: args ',' ID ':' . expr

    IMPORT  shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    DOUBLE  shift, and go to state 7
    BOOL    shift, and go to state 8
    STRING  shift, and go to state 9
    TRUE    shift, and go to state 10
    FALSE   shift, and go to state 11
    LET     shift, and go to state 12
    VAR     shift, and go to state 13
    NIL     shift, and go to state 22
    ID      shift, and go to state 23
    NOT     shift, and go to state 24
    '['     shift, and go to state 25
    '('     shift, and go to state 26

    stmt_import        go to state 27
    alone_id           go to state 34
    id_chain           go to state 35
    varlet             go to state 36
    var                go to state 47
    expr               go to state 181
    func_call          go to state 40
    array_constructor  go to state 42


State 176

   24 elseif_list: elseif_list ELSEIF expr stmt_block .

    $default  reduce using rule 24 (elseif_list)


State 177

   25 stmt_switch_block: CASE alone_id ':' stmt_block BREAK .

    $default  reduce using rule 25 (stmt_switch_block)


State 178

   27 stmt_switch_block: stmt_switch_block CASE alone_id ':' stmt_block . BREAK

    BREAK  shift, and go to state 182


State 179

    8 stmt_list: stmt_list . stmt end_expr
   84 func_body: '(' arg_list_decl ')' FUNCTIONARROW stmt_list .

    IMPORT    shift, and go to state 4
    INT       shift, and go to state 5
    FLOAT     shift, and go to state 6
    DOUBLE    shift, and go to state 7
    BOOL      shift, and go to state 8
    STRING    shift, and go to state 9
    TRUE      shift, and go to state 10
    FALSE     shift, and go to state 11
    LET       shift, and go to state 12
    VAR       shift, and go to state 13
    REPEAT    shift, and go to state 14
    WHILE     shift, and go to state 15
    FOR       shift, and go to state 16
    IF        shift, and go to state 17
    SWITCH    shift, and go to state 18
    BREAK     shift, and go to state 19
    FUNCTION  shift, and go to state 20
    RETURN    shift, and go to state 21
    NIL       shift, and go to state 22
    ID        shift, and go to state 23
    NOT       shift, and go to state 24
    '['       shift, and go to state 25
    '('       shift, and go to state 26

    $default  reduce using rule 84 (func_body)

    stmt_import        go to state 27
    stmt               go to state 28
    stmt_if            go to state 29
    stmt_switch        go to state 30
    stmt_while         go to state 31
    stmt_for           go to state 32
    stmt_repeat        go to state 33
    alone_id           go to state 34
    id_chain           go to state 35
    varlet             go to state 36
    var                go to state 37
    var_list           go to state 38
    expr               go to state 39
    func_call          go to state 40
    func_decl_named    go to state 41
    array_constructor  go to state 42


State 180

   88 args_decl: args_decl ',' alone_id ':' . type

    STRINGT     shift, and go to state 105
    CHARACTERT  shift, and go to state 106
    INTT        shift, and go to state 107
    FLOATT      shift, and go to state 108
    DOUBLET     shift, and go to state 109
    BOOLT       shift, and go to state 110

    type  go to state 183


State 181

   53 expr: expr . AND expr
   54     | expr . OR expr
   55     | expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . '%' expr
   60     | expr . '>' expr
   61     | expr . '<' expr
   62     | expr . GE expr
   63     | expr . LE expr
   64     | expr . EQ expr
   65     | expr . NE expr
   66     | expr . RANGE expr
   76 args: args ',' ID ':' expr .

    RANGE  shift, and go to state 72
    EQ     shift, and go to state 73
    NE     shift, and go to state 74
    LE     shift, and go to state 75
    GE     shift, and go to state 76
    OR     shift, and go to state 77
    AND    shift, and go to state 78
    '<'    shift, and go to state 79
    '>'    shift, and go to state 80
    '+'    shift, and go to state 81
    '-'    shift, and go to state 82
    '*'    shift, and go to state 83
    '/'    shift, and go to state 84
    '%'    shift, and go to state 85

    $default  reduce using rule 76 (args)


State 182

   27 stmt_switch_block: stmt_switch_block CASE alone_id ':' stmt_block BREAK .

    $default  reduce using rule 27 (stmt_switch_block)


State 183

   88 args_decl: args_decl ',' alone_id ':' type .

    $default  reduce using rule 88 (args_decl)
