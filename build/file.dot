graph graphname {
root;
func0[label = "func"];
root--func0;
func0name[label = "func_name"];
expr0[label = "anotherone"];
func0name--expr0;
func0--func0name;
func0args[label = " args "];
func0 -- func0args;
func0body[label = " body "];
func0 -- func0body;
assign0[label = "="];
func0body--assign0;
expr1[label = "id"];
assign0--expr1;
type0[label = "Varuble Type"];
type0--expr1;
type1[label = "Int"];
type1--type0;
consttype0[label = "Constant Type"];
consttype0--expr1;
consttype1[label = "Var"];
consttype1--consttype0;
expr2[label = "pie"];
expr1--expr2;
expr3[label = "0"];
assign0--expr3;
return1[label = "return"];
func0body--return1;
expr4[label = "1"];
return1--expr4;
func1[label = "func"];
root--func1;
func1name[label = "func_name"];
expr5[label = "mains"];
func1name--expr5;
func1--func1name;
func1args[label = " args "];
func1 -- func1args;
expr6[label = "s"];
func1args--expr6;
func1body[label = " body "];
func1 -- func1body;
assign2[label = "="];
func1body--assign2;
expr7[label = "id"];
assign2--expr7;
type1[label = "Varuble Type"];
type1--expr7;
type2[label = "Int"];
type2--type1;
consttype2[label = "Constant Type"];
consttype2--expr7;
consttype3[label = "Var"];
consttype3--consttype2;
expr8[label = "cake"];
expr7--expr8;
expr9[label = "0"];
assign2--expr9;
assign3[label = "="];
func1body--assign3;
expr10[label = "id"];
assign3--expr10;
type2[label = "Varuble Type"];
type2--expr10;
type3[label = "Double"];
type3--type2;
consttype4[label = "Constant Type"];
consttype4--expr10;
consttype5[label = "Var"];
consttype5--consttype4;
expr11[label = "badcake"];
expr10--expr11;
expr12[label = "1.9"];
assign3--expr12;
return4[label = "return"];
func1body--return4;
expr13[label = "1"];
return4--expr13;
func2[label = "func"];
root--func2;
func2name[label = "func_name"];
expr14[label = "main"];
func2name--expr14;
func2--func2name;
func2args[label = " args "];
func2 -- func2args;
expr15[label = "s"];
func2args--expr15;
func2body[label = " body "];
func2 -- func2body;
assign5[label = "="];
func2body--assign5;
expr16[label = "id"];
assign5--expr16;
type3[label = "Varuble Type"];
type3--expr16;
type4[label = "Int"];
type4--type3;
consttype6[label = "Constant Type"];
consttype6--expr16;
consttype7[label = "Var"];
consttype7--consttype6;
expr17[label = "cake"];
expr16--expr17;
expr18[label = "0"];
assign5--expr18;
assign6[label = "="];
func2body--assign6;
expr19[label = "id"];
assign6--expr19;
type4[label = "Varuble Type"];
type4--expr19;
type5[label = "Double"];
type5--type4;
consttype8[label = "Constant Type"];
consttype8--expr19;
consttype9[label = "Var"];
consttype9--consttype8;
expr20[label = "badcake"];
expr19--expr20;
expr21[label = "1.9"];
assign6--expr21;
return7[label = "return"];
func2body--return7;
expr22[label = "1"];
return7--expr22;
assign8[label = "="];
root--assign8;
expr23[label = "id"];
assign8--expr23;
type5[label = "Varuble Type"];
type5--expr23;
type6[label = "Bool"];
type6--type5;
consttype10[label = "Constant Type"];
consttype10--expr23;
consttype11[label = "Var"];
consttype11--consttype10;
expr24[label = "trueBool"];
expr23--expr24;
expr25[label = "true"];
assign8--expr25;
assign9[label = "="];
root--assign9;
expr26[label = "id"];
assign9--expr26;
type6[label = "Varuble Type"];
type6--expr26;
type7[label = "Int"];
type7--type6;
consttype12[label = "Constant Type"];
consttype12--expr26;
consttype13[label = "Var"];
consttype13--consttype12;
expr27[label = "int"];
expr26--expr27;
expr28[label = "0"];
assign9--expr28;
assign10[label = "="];
root--assign10;
expr29[label = "id"];
assign10--expr29;
type7[label = "Varuble Type"];
type7--expr29;
type8[label = "String"];
type8--type7;
consttype14[label = "Constant Type"];
consttype14--expr29;
consttype15[label = "Var"];
consttype15--consttype14;
expr30[label = "s"];
expr29--expr30;
expr31[label = "some""];
assign10--expr31;
if0[label = "if"];
root--if0;if0condition[label = " condition "];
if0 -- if0condition;
expr32[label = ">"];
if0condition--expr32;
expr33[label = "id"];
expr32--expr33;
expr34[label = "int"];
expr33--expr34;
expr35[label = "1"];
expr32--expr35;
if0body[label = " body "];
if0 -- if0body;
for0[label = "for"];
root--for0;
for0body[label = "body"];
for0--for0body;for0varname[label = "var"];
for0--for0varname;expr36[label = "a"];
for0varname--expr36;
for0start[label = "start"];
for0--for0start;expr37[label = "1"];
for0start--expr37;
for0end[label = "end"];
for0--for0end;expr38[label = "10"];
for0end--expr38;
for0step[label = "step"];
for0--for0step;expr39[label = "1"];
for0step--expr39;
}
